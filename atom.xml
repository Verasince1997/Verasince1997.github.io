<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jueluo</title>
  
  
  <link href="https://verasince1997.github.io/atom.xml" rel="self"/>
  
  <link href="https://verasince1997.github.io/"/>
  <updated>2024-10-20T08:03:39.219Z</updated>
  <id>https://verasince1997.github.io/</id>
  
  <author>
    <name>jueluo 深圳之恋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>什么是幸福</title>
    <link href="https://verasince1997.github.io/2024/10/20/%E4%BA%BA%E6%96%87/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B9%B8%E7%A6%8F/"/>
    <id>https://verasince1997.github.io/2024/10/20/%E4%BA%BA%E6%96%87/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B9%B8%E7%A6%8F/</id>
    <published>2024-10-20T07:23:26.577Z</published>
    <updated>2024-10-20T08:03:39.219Z</updated>
    
    <content type="html"><![CDATA[<p>人人都希望得到幸福，但究竟什么是幸福呢？又是什么阻碍了我们去感知幸福？在通往幸福的道路上，隐藏着哪些我们没有察觉到的杀手？人生的目的是什么？英国的哲学家大卫休谟曾经这样说过，人类刻苦勤勉的终点就是获得幸福。那么幸福到底是个什么东西啊？</p><p>如果没有大房子，我们是否就没有了幸福？如果你饿着肚子饿了三天，到那个时候，谁要是给你一块这个热馒头，你会说，哎哟，真是够幸福的了。在某种情况下，我们就会觉得这个幸福怎么变得有点迷茫。你说它高远，它就非常的高远，你说它具体，它也变得非常具体。</p><p>其实现在社会我觉得流行很多对于幸福的误解，第一个，幸福不是金钱，金钱不能解决所有的问题，尤其不能解决心灵的问题。因为幸福和金钱并不划等号。特别是当我们已经有了一部分金钱，我们生活的那些最基本的部分被满足以后，那么去追索幸福就尤其不能靠物质的这种堆积去达到。大家都看到哪些卖彩票的投注站在报纸上看到一个消息，说哎哟，某人叫两块钱，结果一下中了一个几百万的大奖。哎哟，我心想，他多幸福啊，那可真是天上掉馅儿饼，不是一个馅儿饼，简直是一个箩筐，简直是半山遍野的馅儿饼都落下来了。多幸福啊。甚至有的时候会说，不是几百万的奖金呢，是几千万的奖金，甚至还有更高数额的奖金。那么你可知道这些中了大奖的人，在得到了这样一大笔财富之后，他们的幸福感能持续多久？心理学家对这个问题啊也很感兴趣，他们专门去研究了世界上那些中大奖的人之后，他的幸福感有没有什么改变？得出的结论是什么？是大概一个半月以后，这些人的幸福感全部回到了他们没得奖之前。可能不相信啊。你想着，要是我得了大奖，我怎么也不得乐个一年吧，或者三月。但是科学家们做的这个研究就是这样。大家可能要问了，这是为什么呢？也许有人会说，我如果要是有很多钱，就一定会幸福。但是我们国家现在的人均收入比起30年前已经翻了好几倍，可是感到幸福的人却没有随之而增加。甚至有的人觉得还没有以前幸福的。这是为什么呢？因为你相对位置的变化。<span id="more"></span></p><p>举个例子啊，心理学家给大家做了个试验，有两个选项，第一个选项是你得五块钱，别人得你的一半儿，两块五。另外一个选项，你得十块钱，别人是你的两倍，二十块钱。那就你个人来讲啊，你第一种选择你才得五块钱，第二种选择你已经得了十块钱，你多了一倍。可是你猜怎么着？绝大多数人都选五块钱，说我宁愿少得点儿，只要别人比我更少就行。这是人心里很复杂也很微妙的一种反应。人很在于相对的位置，整个社会的水平，收入提高了，可是你觉得你相对的水平没有提高。哎，甚至你好像觉得自己还有一点落差的时候，你的幸福感不但没有随着金钱的增加而成倍的翻番呢。反倒在那里有了一种失落感。所以，人类的幸福感我们认为啊，一定是和一个更多的金钱有关系，和更大的房子和更好的汽车和更高的职务。和一个更名牌的大学和一个更显赫的学位有关。这只是一种不正确的想象，幸福感和这些条件没有必然的联系。</p><p>那么第二条幸福也不是等同于长寿，不是越活得长就越幸福。生命最重要的部分不是在于生命的长度，不是在于生命的数量，而是在于生命的质量，在于生命的深度。一个年轻人，如果他因为自己的理想而这个献出了生命。你可以说他不幸福吗？他为自己的那种愿望，为实现自己的梦想而付出了所有的一切。</p><p>那么第三条幸福也不是多子多孙，大海中的鱼、虾到繁殖的季节的时候，子孙可能有几十万。那是不是这些鱼虾就比我们更幸福呢？那是它繁衍的需要并不直接等同于幸福。</p><p>大家还可以想出一些其他的方面，幸福也不等同于健康，有一个健康的身体，他可以觉得不幸福。可是有的人，他没有健康的身体，他依然可以享有幸福。但是我想我们每一个人都会坚定不移地相信这一点。并不是一个完整的身体我们就一定享有幸福。而我们的身体如果不是在最佳的状态，我们就将丧失幸福。不，绝对不是这样的。幸福不是金钱，不是长寿，不是多子多孙，也不是身体健康。那么幸福到底是什么呢？为什么说只有心灵才具有把握幸福的能力呢？有一位哲人说过，生活中不是缺少美，而是缺少了发现。其实我们的生活中不是缺少了幸福，而是缺少了感知。为了搞清幸福到底是什么，有这样的定义，幸福是一种持续时间很长、对生活感到满足、觉得生活有巨大乐趣，并自然而然的希望这种心情保持长久的愉快感觉。我觉得里面有两个因素特别重要，一个是愉快的感觉，一个是希望他保持长久。</p><p>有人会说，那你觉得快乐和幸福有什么不同？快乐是一种身体即刻的反应。快乐的时候，我们的神经系统会分泌一种物质，医学上定名叫做内啡肽，日本的医学博士春山茂雄，他在脑内革命这本书里就说啊，人的心灵由大脑的脑干，大脑边缘系统和大脑皮质组成，其中有一种神经当受到外界刺激的时候，会使人感到快感。饮食，性生活给予我们充分的快感，体育运动，读书，学习也能给我们以难以言说的快感。为他人奉献和为社会工作也能带来那种精神的愉悦。这些快感都来自于我们神经系统分泌的内啡肽。</p><p>现在我们知道快乐是怎么回事了，而且快乐还是有这样的生理基础的，那么幸福和它有什么不同？幸福是一个更为深远的，贯穿我们一生的一个情感的体系。一个幸福的人，并不是当他的亲人逝去的时候他不悲痛，也不是说当他遭遇挑战，遭遇失败的时候，他不沮丧，或者说他不会落泪。一个幸福的人呢，他完全有这些七情六欲，但是在他心里，他会知道，人的一生是要去追求幸福，是要去尊重那些客观的规律，是要把自己一己的生命里那些最美好的部分去表达、去发扬，而且由于自己的存在，可以让整个的人类变得更加的美好，去尽一点点微薄之力，他就会感受到那种发自内心的，长久的愉悦。我想这就是一种当代人的幸福观。所以一个人对于幸福的感知其实是比较恒定的，在某种程度上，把握幸福不是金钱的能力，而是你灵魂的能力。原来幸福是如此简单，就是把一种愉快的感觉保持长久。</p><p>所以，只有我们的心灵才能感受到幸福。但为什么同样的情景，有的人感觉幸福，而有的人却感觉不到幸福呢？有一家报纸在评选谁是世界上最幸福的人。然后读者们呢，就这个写下自己的答案，那些信件啊，像雪片一样的就飞到了这个报社。报社将一封一封信拆开，然后把各种各样的答案分门别类的统计。最后呢，他们得出了一个答案，有三种人是世界上最幸福的人。</p><p>第一种人是什么？是一个妈妈刚刚给自个儿的孩子洗完澡抱着他的孩子的那个时刻。这个妈妈是世界上最幸福的人。那第二种最幸福的人是什么？是一个医生，医治好了自己的病人，他送病人出院，那么和病人挥手告别的那一刹那，这个医生是世界上最幸福的人。第三个答案呢，是说一个孩子在海滩上用沙子修建了一个沙堡，那么当沙堡完工的时候，这个孩子看到他亲手建造的这个沙堡。那一瞬间，这个孩子是世界上最幸福的人。我看着这三个答案，又看到下面写了一行字，说由于来信特别的多，专家们呢取舍不下，最后又加了一个补充的一条，又找了一个世界上最幸福的人是什么呢？是一个作家写完了自己作品的最后一个字，在作品的结尾画上句号的瞬间，这个作家这一刻也是世界上最幸福的人。四个答案给孩子喜欢澡的妈妈，受病人出院的医生在海滩上建造了一个沙堡的孩子给自己的作品画上了最后一个句号的作家。这是公众评选出来的最幸福的人。</p><p>我们每一个人，如果你不知道自己在什么时候能够感觉到愉快，你怎么可以把这种愉快这个贯穿自己的一生，怎么才能去达到幸福的那个终结呢？如果你做不到这一点的话，人生真的是是暗淡的，在某种程度上来讲也真的是虚度了人生。中国人对待幸福把握上面啊，大致可以分为引真执，可行，黄连团字形隐真执可行。就是说，如果你口渴了，拿什么来解渴呢？有的人就喝了真酒，这是一个毒酒，喝进去的时候，你觉得是一个液体，进入到你的体内了。当时你可能觉得解了渴，而实际上它已经残害了你的生命。没错，我们吃很多这个佳肴美食，会觉得快乐。假如你由着自个儿的嘴巴做主，你不断地吃东西，你试试看，高血脂，高血糖了啊。然后你不能再吃下去了。</p><p>那么说到我们的幸福，我觉得有很多人为了眼前的利益，为了金钱，为了信誉，为了这个某种权，追逐权利，甚至是不择手段的去犯法，这样子所获得的幸福就都是饮鸩止渴。人为什么要去吸毒。最多的一个理由是我为了让自己快乐。我为了让自己幸福，难道不是饮鸩止渴了吗？还有很多人，比如说喝酒成瘾，比如说赌博成瘾。他倒觉得这件事情让我很开心啊，但我很快乐呀。他不知道在这个过程当中，他所追求的快乐其实是付出了极为惨痛的代价。饮鸩止渴行就是一味追求感官上的一时快感，虽然可以获得一时的愉悦，但随之而来的是更大的痛苦，一种不能持久的快乐，当然不是幸福。与之相反的黄连团子型是不是可以达到幸福的彼岸呢？</p><p>德国的哲学家费尔巴哈说过，你活着的最主要的目标就是让你自己幸福，而且只有你幸福了，你才可以让周围的人幸福，因为幸福的人愿意在自己的周围也看到幸福的人。幸福就是快乐和意义相结合。快乐指的我们在当下感觉到非常的愉悦，内啡肽开始分泌的时候。可是人是有理性的，我们不能被体内的一种激素牵着鼻子走啊。我们不能只沉浸在当下的愉快当中，我们还要眺望远方，我们要去寻找生命的意义。人是追求意义的动物，意义就是理想就是目标，就是在你庸常的这种琐碎的日常生活之外，在远方，你有一个用自己的全部精力去投入到的宏伟的一个理想，每一个人都要有。如果你没有理想，你这一生真的和幸福无关。</p><p>我们已经谈到了什么是幸福，谈到了幸福的类型。那么你可知道，在我们争取幸福的过程当中，有一个最大的杀手，这个杀手无时无刻不潜伏在我们的周围。它会给我们的决心，我们的自我形象的认知，我们的努力和我们方方面面的这种行为带来强大的破坏。这个杀手。如果我们对他没有一个明确的认识，我要说，那幸福真的和我们会擦肩而过。在我们追求幸福的路上，第一个杀手就是自卑。在现实生活中，几乎人人都曾经被自卑的阴影所笼罩，那么，为什么人人都会有自卑感？自卑都有哪些表现？自卑的情节是怎么形成的呢？自卑既然是幸福的杀手，又为什么说自卑也是有好处的呢？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;人人都希望得到幸福，但究竟什么是幸福呢？又是什么阻碍了我们去感知幸福？在通往幸福的道路上，隐藏着哪些我们没有察觉到的杀手？人生的目的是什么？英国的哲学家大卫休谟曾经这样说过，人类刻苦勤勉的终点就是获得幸福。那么幸福到底是个什么东西啊？&lt;/p&gt;
&lt;p&gt;如果没有大房子，我们是否就没有了幸福？如果你饿着肚子饿了三天，到那个时候，谁要是给你一块这个热馒头，你会说，哎哟，真是够幸福的了。在某种情况下，我们就会觉得这个幸福怎么变得有点迷茫。你说它高远，它就非常的高远，你说它具体，它也变得非常具体。&lt;/p&gt;
&lt;p&gt;其实现在社会我觉得流行很多对于幸福的误解，第一个，幸福不是金钱，金钱不能解决所有的问题，尤其不能解决心灵的问题。因为幸福和金钱并不划等号。特别是当我们已经有了一部分金钱，我们生活的那些最基本的部分被满足以后，那么去追索幸福就尤其不能靠物质的这种堆积去达到。大家都看到哪些卖彩票的投注站在报纸上看到一个消息，说哎哟，某人叫两块钱，结果一下中了一个几百万的大奖。哎哟，我心想，他多幸福啊，那可真是天上掉馅儿饼，不是一个馅儿饼，简直是一个箩筐，简直是半山遍野的馅儿饼都落下来了。多幸福啊。甚至有的时候会说，不是几百万的奖金呢，是几千万的奖金，甚至还有更高数额的奖金。那么你可知道这些中了大奖的人，在得到了这样一大笔财富之后，他们的幸福感能持续多久？心理学家对这个问题啊也很感兴趣，他们专门去研究了世界上那些中大奖的人之后，他的幸福感有没有什么改变？得出的结论是什么？是大概一个半月以后，这些人的幸福感全部回到了他们没得奖之前。可能不相信啊。你想着，要是我得了大奖，我怎么也不得乐个一年吧，或者三月。但是科学家们做的这个研究就是这样。大家可能要问了，这是为什么呢？也许有人会说，我如果要是有很多钱，就一定会幸福。但是我们国家现在的人均收入比起30年前已经翻了好几倍，可是感到幸福的人却没有随之而增加。甚至有的人觉得还没有以前幸福的。这是为什么呢？因为你相对位置的变化。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="人文" scheme="https://verasince1997.github.io/tags/%E4%BA%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>《白鹿原》书评</title>
    <link href="https://verasince1997.github.io/2024/10/06/%E4%BA%BA%E6%96%87/%E7%99%BD%E9%B9%BF%E5%8E%9F/"/>
    <id>https://verasince1997.github.io/2024/10/06/%E4%BA%BA%E6%96%87/%E7%99%BD%E9%B9%BF%E5%8E%9F/</id>
    <published>2024-10-06T07:36:37.416Z</published>
    <updated>2024-10-06T08:55:42.126Z</updated>
    
    <content type="html"><![CDATA[<h5 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h5><p>小说被认为是一个民族的秘史，作者陈忠实以巴尔扎克的这句名言，作为小说的题记，表达了他创作史诗性小说的宏大野心。小说被认为是一个民族的秘史，这句话并不适用于所有的小说，有时候他是一个人的秘史，或者是一群人的。但是在白鹿原，以及跟陈忠实同时代的作家的大多小说里，这句话再合适不过了。白鹿原所选取的这个时间段—清末民初到建国前夕，正好是我们民族从农耕文化向现代文化，艰难转型的一个时期。漫长的封建专制的淫威，早就扼杀了绝大部分平民，百姓本就微弱的参政议事。作者借白嘉轩之口，引出了一条贯穿全书的主线，没有皇帝了，往后的日子咋过呢？</p><p>2000年封建制度瓦解后的半个多世纪里，那些没有名字的中国人，只在虚构的小说里留下最后的样子。时代更迭的大浪褪去，在被洗刷过的海岸上，我们只能从一条被晒干的鱼身上得知，这块泥潭里曾经有这样的生命挣扎过，他们狰狞扭曲的最后的样子变成风干的标本，而标本是不会说话的，没血也没肉，他们的形象最终在历史里被统一成一场运动，被统一成一个阶级，被统一成一类思想，被统一成一股力量，被统一成一个事件，被统一成一句口号，被统一成一种声音，被统一成一样的命运。这些被统一的我们已然在历史中看到，而那些被过滤掉的不足以记录下来的，作为个体的不自知的，不被接纳的，它们最终在小说里得以秘密的呈现，他们并不汹涌如巨浪，更像埋在地底的黑色的暗流，秘而不宣、缓慢又哀伤。</p><h5 id="小说背景"><a class="markdownIt-Anchor" href="#小说背景"></a> 小说背景</h5><p>白鹿原小说的背景就是陈忠实的老家，关中平原的一个村子，五六十年代的作家写时代的都离不开两样东西，一个是家族，一个是家乡。家族往往成了故事的整个的结构，它的串线。家乡就是整个小说的文化的背景。（隐秘的高粱地，豪放的酒干，撕裂的秦腔，干枯的黄土地，男人关着黝黑的身子，女人是生育的机器，老人的皱纹里都嵌着泥土，这里伸展着一切粗犷，以至于野蛮、沉默又顽强，他和温热阴冷的江南的情绪是不一样的，它不是哀怨，它有点生猛的悲怆、更加单一、也更加具有原始的力量。）<span id="more"></span></p><p>白鹿原以白鹿村的白家和鹿家，这两个地方上的大家族贯穿了整个的小说，小说第一句就是白嘉轩引以为傲的就是一辈子娶过七房的女人，前六个都死了，但是还是要娶，为什么呢？因为要生孩子，女人不重要，孩子很重要。中国人为什么这么喜欢生孩子？而且非得要男孩，因为我们一直都是家本位，白家有祖业，是白鹿村的大户，那更要去传宗接代了，礼教思想下的家本位，不能延续家族就等于亡国了，他是不孝不忠的。生孩子就是要延续家世，世代代生的多了，他就成了家族了，只要吃得起饭，生得越多越好。这也跟当时的生产力是有关系的，人丁越多，劳动力越多，创造出剩余价值的可能就越大。随着几代人的积累，很可能有能力买下了一块地，成为一个小地主，再做做生意，再放放珠子，再借借贷，可以成为一个大地主了，最终可以免于劳动。于是地主和农民的矛盾，一直以来都是封建制度下的一个非常重要的一个主要的矛盾，他虽然不是那么的针锋相对的，因为农民真正对立的还是什么，还是更上面的。而地主呢他们又拥有一种依附的关系，但是最直白的，最直接的，最快速的，能够对立的那依然还是农民和地主之间的关系。而那些没有后代的社会不能够提供福利的晚年，他就是等死，所以中国式的家它就自成一体，在家里面在内部发酵出统一的伦理道德，家就像是一个小国需要治理，那么需要治理，他就需要有大家长，所以家本位可以理解成家长本位，家不能败在某一代人手上。所以妈妈给儿子找媳妇儿，她会观察媳妇能不能生育，屁股大不大，于是这种结构下女人就成了生育的机器。而家的核心的位置的巩固，还要有一个非常主要的原因，就是农耕民族，我们的生活是固定的，我们依赖于土地，只要没有发生旱涝瘟瘟疫或者战争，或者地方上过于腐败的一些地方政府，这些不知道哪一代来到这里，并且在这里扎根生活下来的家庭，他们很可能在这里会继续生活，几个世纪甚至更久，他们会重复着相似的甚至绝对相同的生活方式，而这种稳定性巩固了家的内部的关系。它可以非常长久地遵循一套规律，他们没有人敢去打破它，他们甚至也不知道该怎么打破它，于是他久了自然会发酵出他的各种问题，但他也一定不全部都是不堪的糟粕，否则他不会延续这么久的呃。但也不是任何的家庭，他们大家都有能力放开生。大多的佃农、小地主、佣工、长工是没有能力的，这主要取决于年头的收成跟社会的稳定。赋税是封建制度下中国农民最重的担子了，虽然各个朝代实行的纳税的制度不一样，地方上的腐败的程度也不一样，但农民一定永远都是最惨的。雍正时期不再按照人头纳税了，而是按照土地的数量征税，所以人口就开始了暴增。那过去的农民起义，大多也都是因为承担不起，自己没有办法生活了，那么他就要起义了。</p><p>谈到白鹿原，避不开的就是里面大量的大胆的性描写，小说第一页开始就有。那最有印象的就是田小娥这个角色，之前我也看过一些批评白鹿原的，说他过于无节制的描写，这些内容甚至与剧情关系并不大，我记得有一位出生在北京的女作家说有一代作家，都特别的喜欢描写一点身体上的事情，当然了，他自己表示并不喜欢，那为什么这一代作家很多，都在大胆的做性描写呢？虽然我们的古典文学里面，或者隐晦的那些古典文学里面有不少，但我们毕竟在接受这个问题上依然是保守的。因为我们压抑太久了，我的理解是，首先是文化上的压抑，2000年的思想是根源，加上中间的一些运动，我们的文学是丢掉人的，丢掉人自然也就丢掉了人的欲望。于是文化的压抑变成人的压抑，所以文学的这种表达成为了一个新兴的出口，其次才是小说本身的一些需要，只是这部分需要，为什么会有时候让我们现在读起来，会觉得它不具备美感呢？或者是有一些原始的野蛮的那种美感在里面呢？因为他们生在一个白天工作，晚上睡觉。吃饭种地睡觉，生孩子造孩子，是一个家庭的为数不多的几件重要的事情，如果没有了性，这个家庭就好像是缺失了很大的一块内容。这些农村环境下的欲望，天然带有一股强烈的欲望，原始的庄稼地玉米地，肥臀大屁股，不分白天夜晚，有种燥热，有种鼓胀，有种秘密的，粗糙的，不带爱情的一种力量。它可能现在看起来不具有美感，纯粹是感官上的，且这部分内容在家庭内部，一直都是非常的隐秘的。喝酒抽旱烟是一种精神上的愉悦，那剩下的可能就是这种隐秘的性了。以前大家开玩笑说，农村人晚上没事做，所以就爱生孩子。在过去的封建制度下，我们没有爱情，所以他只剩下了原始的野蛮的、羞耻的本能。不只是男人，女人也一样，缺什么写什么。过去太压抑了，所以现在我们要加倍的表达。我们找一个出口，我们要证明自己是反抗的。</p><h5 id="人物设定"><a class="markdownIt-Anchor" href="#人物设定"></a> 人物设定</h5><p>接下来聊聊小说里面的人物的一些设定。小时候看白家和鹿家，从一个小孩子的视角里面，我们好像会更加喜欢白家，好像他更加代表的是正义仁义，更像是一个好人。而鹿子霖呢鹿家就更坏。但是后来你会知道白嘉轩代表的还是封建的礼教思想，辛亥革命只是推翻了皇帝。所以陈忠实没有一棍子就把这个旧的礼教给打死。白嘉轩这个形象它相对来说是比较真实的，也是比较立体的。如果你一棍子就把他打死了，这不是一个封建大家长能够意识到的。在当时的那种时代下，君臣的这种世世代代的思想，这套思想他没有明确的律法，靠的就是内部的几代人、十几代人的从思想上植入的这种条条框框，所以他坚持着世代以来，维护这块土地生长的秩序，并且它不是一个盘剥的一个形象，它在这块土地上是有他的受尊重的道理的。他修葺祠堂开办学校，但对于所有的不齿的违背礼教的思想，他也容不下，所以搞破鞋的田小娥就被他惩罚了，从他自己的时代来看，其实是没有罪的。但矛盾的是，他所代表的阶级是不合适新的这个时代的，它要么被推翻，要么被替代，所以在他的这一代里面，最终他们被推翻了，而在他身上的那部分时代的难以解释的部分，将成为一个民族的秘史。</p><blockquote><p>白嘉轩</p></blockquote><p>白嘉轩是白鹿原上实际执行儒家传统礼法的大家长，传统的礼法在强调严格的等级秩序，长幼有序、尊卑有别的同时，也同时强调社会成员间互相友好，相互扶持。这在灾荒和瘟疫频发的过去，是支撑底层人民抵抗饥饿，团结一心继续繁衍的重要力量。不然都偷鸡摸狗，摘桃恰瓜赌博，抽大烟，打架斗殴，那村子肯定就逐渐走向灭亡了。但同时这套强制执行的自我约束，压制欲望进而维护乡村稳定的思想，也是把人困在一亩三分地的最主要枷锁。人民未必对圣人之言有大的感悟，但在缓慢的历史演进中，封建思想文化，封建道德化成的乡约渗透到了每一个乡社、每一个村庄、每个家族中一代又一代平民的血液里，。这套结构是以强调集体，牺牲个人为代价而存在的，用最简单的话说，为什么别人都能遵守，就你不行呢？这是一句威力巨大的精神规训，它的危险在于，明明我们个人都是身在其中或多或少被牺牲的对象，但却又不自觉地当起了制度的捍卫者。对呀我都忍了，你为什么不行呢，相比起打在身上的板子，跪在祠堂里接受全族人的唾骂，日常乡里乡亲的闲言碎语，对人的影响更加的巨大。但人的欲望不是说压抑就能压抑得住的，即使是腰板子挺得最直，村里最具威严的族长，白嘉轩也时常在向欲望低头。比如他以父亲托梦为借口，迁坟换下了儒家的风水宝地；种植罂粟补填因娶妻留下的亏空；在白孝义迟迟无后之事上，做起了怂恿儿媳跟别人偷情留种的勾当。明面上为了维护权威，捍卫制度，甚至于与亲生的子女断绝关系也在所不惜，私底下为了利益却有一肚子的打算。白嘉轩身上的复杂性，正是作者想表达的我们这个民族的复杂性，一方面，他处处闪耀着人道主义的光辉，他从不打骂长工，如同对待亲人一般对待鹿三，为了救下鹿兆鹏，黑娃的生命，四处的奔走，不计前嫌；另一方面，他也呈现出吃人的一面，断绝与白灵的父女关系，扼杀青年一辈的爱情，用封建礼教强烈的排斥田小娥，把他逼上绝路，甚至于自己的儿子也从未给予自由。作家负责呈现呈现人性难以克服的弱点，以及轮番上演的命运的悲剧，不过其实到了最后结局非常值得玩味，我们到底有没有破除封建传统呢，一方面，白嘉轩不再是腰板子挺得最直白鹿原上最具权威的人，而是变为了鼻梁上架起了一副眼镜，似乎往日已经一去不复返了。但实际上，他的存在以及白孝文所获得的新的地位，似乎又在预示着家族势力，以及建立在家族势力基础之上的社会秩序，似乎只是换了一种形式，存在男权主义色彩的婚姻观，价值观好像依旧在我们民族内部根深蒂固，所以历史究竟是发展了还是在兜圈子呢？</p><blockquote><p>鹿子霖</p></blockquote><p>另外一个主要的角色鹿子霖，这个角色相对来说可能没有那么的复杂，鹿子霖自己首先是在宗教礼教下，他自己就是崩坏的。他也睡过田小娥，最后也利用过她，他在白鹿原的身份远远可能不如白嘉轩，所以他一直想要试图超越他，按理说他和白嘉轩应该都属于地主阶级，他们没有理由要想要推翻自己，但是他只是为了要赢过白嘉轩，所以他加入了国民党，想要在权力上面压倒他，想要寻找一种新的可能。只是他在他自己所处的时代里面，不可能看清大方向，对于世世代代埋在高粱地里面的人来说，他们该朝着哪里走呢？我们过去的几千年，但是皇帝这个东西啊，他一直都在，皇帝在我们就知道自己的身份，有一天皇帝没有了，他们该信谁呢？就成了一个问题。</p><p>而愿意接受新思想的人，他们其实也都是盲目的，所以你会在小说里面看到白家和鹿家后来的年轻人，他们也搞不清楚革命是为了什么，革命是为了打破什么？那我到底要跟谁走呢？所以以至于他们非常荒唐的用掷硬币的方式，决定自己该加入哪个党派。当我们今天回看历史的时候，我们是如此的坚定，但是我们要知道身处在历史中的时候，我们都是蒙着眼睛的。</p><blockquote><p>田小娥</p></blockquote><p>另外一个非常重要的女性角色田小娥，当然记住田小娥这件事多少是有点糟糕的，但她确实是一个非常特殊的一个角色，这个角色一方面承担了礼教受害者的功能，这是小说自己的需要；另外一方面承担了作家的想象，这个是时代的压抑。田小娥她自己的出身并不差，她并不是过去的秦淮河旁的妓女，她的父亲是一个秀才，也就是礼教的一个代表，把她嫁给了举人做二房，每天在身体里面会塞几颗红枣，第二天取出来给举人吃，不知道这样做是可以治病还是壮阳呢？田小娥后来看上了在他们家做长工的黑娃，就开始勾搭黑娃。长工的这种粗糙野蛮的形象，少奶奶久居深闺，这里面的那种压抑的欲望，最容易被我们想象的，那田小娥在偷腥之后，被举人后来休掉了，赶回了娘家。黑娃呢就把田小娥带回了自己家，但是自己家人又不认，认为他是个荡妇，后来黑娃走了之后，田小娥为了生活就被鹿子霖睡，后来又被他利用去陪白嘉轩的儿子白孝文睡。最后他被黑娃的父亲，也同样的代表着礼教的这个思想的帮凶的，这样的一个人最后一刀捅死了田小娥。这样的一个形象，也许他进入过白鹿原上所有的男人的想象里面，但是当白天来到的时候，他会被所有的男人视为下流货。田小娥本来是一个受害者，但是陈忠实没有把他写得非常的被动。那所谓写的被动的写法是什么呢？举个例子，比如田小娥当初是被黑娃强暴的，结果还被自己的先生给休了，然后被赶出家门，家人又不要他，最后沦为所有的男人的玩物，从被动沦丧变为了主动，这种就是纯悲剧性的，这种就是纯被动的，suchas苔丝、茶花女。但陈忠实想在她身上加一些新的思想，也就是自由恋爱、打破礼教的思想，事实上这个思想在她身上这么早的发生，是不太现实的。这么早的提倡自由爱情在她身上也不太可能，所以我说他承担了作家的一些缺失的、想象的那部分内容。</p><blockquote><p>朱先生</p></blockquote><p>朱先生，士农工商中封建社会士大夫的化身，这位16岁应现考得中秀才，22岁赴省事，又以精妙的文辞中了头名的文案，他坚定维护延续千年的房要小、地要少、养个黄牛，慢慢搞，小国寡民的小农经济，他将白家的罂粟连根拔起，参与放粮赈济灾民，应约说退方巡抚的10万入陕清兵，发动七老联名请缨抗日，兴办学堂，拟定乡约。</p><p>正如白嘉轩所言，朱先生是一位圣人，圣人永远占据着道德的制高点，不屑于理会凡人争多嫌少。而凡人难以遵从圣人的至理名言来过自己的生活，当听说谁为田地房屋掉了脑袋的时候，也许会念叨念叨圣人说的房要小地要少，但便宜到了跟前又会一窝蜂的扑上去，把圣人的教诲抛之脑后。所以人们仍然在种鸦片，人民仍然在挨饿，人民仍然在天灾人祸中痛苦的挣扎，清人抗日到最后也只能不了了之。</p><p>士大夫们的人生抱负是靠着科举制度的选拔，走向仕途来实现的，当政权被推翻，朱先生对现实的干预也就变得寸步难行。他依旧选择以儒家思想来规范自我，穷则独善其身，关闭学院，专心地修地方志，以此来在乱世中安身立命，朱先生是对中国传统知识分子最美好的想象，他的离去意味着中国传统文化精神的失落，中国人没有上帝，当我们用西方的科学精神代替了孔孟文化后，物质充盈的背后，回头望去却是精神世界的一片荒芜。作者安排鹿兆鹏、鹿兆海、白灵、黑娃在外面怼天怼地，搞风搞雨，但却都将白鹿学院视为精神避难所。尤其是黑娃拜朱先生为师，将学为好人引以为自己的人生信条，一个土匪到头来成了朱先生口中最好的学生。白鹿原上最好的一个先生谢世了，再也出不了这样的先生，我们所看到的也许不再局限于朱先生这个角色本身，而是作者对儒家文化中好的一面也与糟粕一同被扫进垃圾桶后的失落之情。</p><h5 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h5><p>白鹿原整个小说跨度其实也是非常的大的，今天再来回看这些小说，常常有一种恍如隔世，很多的景象，偶尔还能碰到，但井下里面的人仿佛已经过去了太久太久了，我去过南方的、北方的很多的村子，寨子有些地方已经是非常新了，你完全感受不到它跟过去的，有任何的时空上的连接了，它是热闹的，也是快速的。但还有一些地方没有太大的变化，无非是剥落的墙上多了一个空调，漆黑的堂屋里面，电冰箱发出了幽蓝色的光，它可能相对来说是落后的，但是在我的感性的这一部分上，这个地方更容易让我记住，即便如此，那种贫瘠的沉默了2000年的不流动的生活，始终还是被打破了。于是他也带来了新的问题，对于在这里刚刚生长起来的一代人，他们想要变，他们害怕时间在这里停滞，像过去一样死掉一样，他们害怕祖祖辈辈都关在家的这个东西里面，因为关了太久了，在漫长的封闭的时间里面，一个村子里唯一在变的只有人，剩下的一切都变成祖业延续下来，房子田地、骡子家具、锄头炉灶，、伦理纲常它没有变过，所以他们知道时间还在流动的唯一证据就是有人老死了，所以他们知道时间还在走，而这段时间是秘密的无声的。</p>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;引言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#引言&quot;&gt;&lt;/a&gt; 引言&lt;/h5&gt;
&lt;p&gt;小说被认为是一个民族的秘史，作者陈忠实以巴尔扎克的这句名言，作为小说的题记，表达了他创作史诗性小说的宏大野心。小说被认为是一个民族的秘史，这句话并不适用于所有的小说，有时候他是一个人的秘史，或者是一群人的。但是在白鹿原，以及跟陈忠实同时代的作家的大多小说里，这句话再合适不过了。白鹿原所选取的这个时间段—清末民初到建国前夕，正好是我们民族从农耕文化向现代文化，艰难转型的一个时期。漫长的封建专制的淫威，早就扼杀了绝大部分平民，百姓本就微弱的参政议事。作者借白嘉轩之口，引出了一条贯穿全书的主线，没有皇帝了，往后的日子咋过呢？&lt;/p&gt;
&lt;p&gt;2000年封建制度瓦解后的半个多世纪里，那些没有名字的中国人，只在虚构的小说里留下最后的样子。时代更迭的大浪褪去，在被洗刷过的海岸上，我们只能从一条被晒干的鱼身上得知，这块泥潭里曾经有这样的生命挣扎过，他们狰狞扭曲的最后的样子变成风干的标本，而标本是不会说话的，没血也没肉，他们的形象最终在历史里被统一成一场运动，被统一成一个阶级，被统一成一类思想，被统一成一股力量，被统一成一个事件，被统一成一句口号，被统一成一种声音，被统一成一样的命运。这些被统一的我们已然在历史中看到，而那些被过滤掉的不足以记录下来的，作为个体的不自知的，不被接纳的，它们最终在小说里得以秘密的呈现，他们并不汹涌如巨浪，更像埋在地底的黑色的暗流，秘而不宣、缓慢又哀伤。&lt;/p&gt;
&lt;h5 id=&quot;小说背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#小说背景&quot;&gt;&lt;/a&gt; 小说背景&lt;/h5&gt;
&lt;p&gt;白鹿原小说的背景就是陈忠实的老家，关中平原的一个村子，五六十年代的作家写时代的都离不开两样东西，一个是家族，一个是家乡。家族往往成了故事的整个的结构，它的串线。家乡就是整个小说的文化的背景。（隐秘的高粱地，豪放的酒干，撕裂的秦腔，干枯的黄土地，男人关着黝黑的身子，女人是生育的机器，老人的皱纹里都嵌着泥土，这里伸展着一切粗犷，以至于野蛮、沉默又顽强，他和温热阴冷的江南的情绪是不一样的，它不是哀怨，它有点生猛的悲怆、更加单一、也更加具有原始的力量。）&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="人文" scheme="https://verasince1997.github.io/tags/%E4%BA%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>项目坎坷的一生--需求、设计、测试评审</title>
    <link href="https://verasince1997.github.io/2024/10/01/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E9%A1%B9%E7%9B%AE%E5%9D%8E%E5%9D%B7%E7%9A%84%E4%B8%80%E7%94%9F--%E9%9C%80%E6%B1%82%E3%80%81%E8%AE%BE%E8%AE%A1%E3%80%81%E6%B5%8B%E8%AF%95%E8%AF%84%E5%AE%A1/"/>
    <id>https://verasince1997.github.io/2024/10/01/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E9%A1%B9%E7%9B%AE%E5%9D%8E%E5%9D%B7%E7%9A%84%E4%B8%80%E7%94%9F--%E9%9C%80%E6%B1%82%E3%80%81%E8%AE%BE%E8%AE%A1%E3%80%81%E6%B5%8B%E8%AF%95%E8%AF%84%E5%AE%A1/</id>
    <published>2024-10-01T00:58:07.988Z</published>
    <updated>2024-10-01T01:22:52.807Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-评审"><a class="markdownIt-Anchor" href="#1-评审"></a> 1. 评审</h3><p>哼哧哼哧写完需求文档，为了保证产品的质量，需求方案还必须要通过各方的评审，方可进入开发阶段。产品需求是产品每个干系人的事情，项目中的需求阶段通常会围绕着写作、评审、修改、评审的循环展开。评审就是项目中相关的几个小团队坐在一起，一方讲另外一方听，并确认统一认识，消除误解，及时发现偏差，防止问题随时间放大。不做评审看似省了时间，但往往隐藏了问题，待到其爆发的时候会耽误更多的事，而且会在谁负责的问题上纠缠不清，与其亡羊补牢，不如尽早在流程上预防，所谓防病优于治病。</p><p>项目中最重要的三种角色，就是PD（Product Designer/Product Director）、开发人员、测试人员，由此派生出三次评审：需求评审、设计评审、测试评审。</p><h5 id="11-需求评审"><a class="markdownIt-Anchor" href="#11-需求评审"></a> 1.1 需求评审</h5><p>需求评审是PRD评审、UC评审、DEMO评审的统称，评审会上PD把PRD和UC说给开发测试听，DEMO评审则由UE的同学主讲。在做出比较大的PRD之后马上安排一次评审，当然也会有UC和DEMO的半成品，以期尽早发现问题，比如业务规划的不合理、产品界面太丑陋、某功能技术上无法实现等。</p><p>PRD的评审，会重点关注偏商业的内容，强烈建议叫上老板、营销人员、服务人员甚至用户一起来听。PRD通过以后，PD们会和UE的同学一起细化UC和DEMO，而开发的同学也会同步进行一些开发前的准备工作，比如细化和修正项目计划、部分统计的设计。</p><p>接下来的DEMO评审决定了产品的外观项目，干系人最好都来把下关。而UC评审更偏重技术实现，商业团队的成员可以选择参加。</p><h5 id="12-设计评审"><a class="markdownIt-Anchor" href="#12-设计评审"></a> 1.2 设计评审</h5><p>设计评审是在概要设计与详细设计完成之后进行，由开发工程师把对需求的理解，以设计文档的形式说给PD、测试听。</p><h5 id="13-测试评审"><a class="markdownIt-Anchor" href="#13-测试评审"></a> 1.3 测试评审</h5><p>测试评审俗称TC评审，是在TC编写完成，测试开始执行之前进行，由测试工程师把对需求的理解，以TC的形式说给PD开发厅。</p><p>每一种评审都可能有多轮，会上没问题就快速的通过，有小问题当场确认，大问题带回去。原则是改动较多的话，必须再次评审，审议不大可以通过。评审会议的组织者可以考虑都由QA担任，作为项目过程管理的一部分，也可以考虑由每次评审的主讲人发起。</p><p>需求评审会的组织过程中，特别要注意两种容易漏掉的参与者，大家可以扩展应用到各种评审会上。一是能做决定的人，因为评审的时候，各方不可避免的会对需求有不同理解，从而出现争论，而很多问题都是公说公有理，婆说婆有理，谁也说服不了谁。这个时候啊，就需要有人能拍板，有人能负责。二是与此项目有关的产品接口人，他的参与可避免太晚发现与其他系统有冲突，修改起来措手不及，作为PD肯定是希望只要有点儿关系的人都来参加会议，但现实中呢是不可能的，所以必须识别出对当前项目来说谁更重要。</p><p>再看需求的生老病死，之前是从某个需求本身的状态变化来看，现在我们把它融入项目再审视一番。除纯技术项目外，PD是产品不断改进的原动力，所以项目前期PD主导的环节比较多，而一个需求就在这些环节中生老病死了。我觉得可以用几个会议来概括，项目大小有不同，所以这里的会议不需要严格理解成会议室里一群人正襟危坐，有可能是两三个人围在电脑前的几分钟交流。</p><h3 id="2-项目中的各个阶段"><a class="markdownIt-Anchor" href="#2-项目中的各个阶段"></a> 2. 项目中的各个阶段</h3><p>项目开始之前，在产品团队内部，分析需求商业价值的需求讨论会、多个产品间的产品会议上，PD们带着自己的需求参与讨论，为那仅有的开发和测试资源PK，人性的本能让每个人都极力维护自己提出的需求，并设法反驳别人，当然了出发点都是为了用户，最终也会达成一致，活下来的需求会确定需求负责人，状态变为需求中。</p><h5 id="21-需求阶段"><a class="markdownIt-Anchor" href="#21-需求阶段"></a> 2.1 需求阶段：</h5><p>项目中的需求阶段：项目启动之后PD就得抓紧时间完成需求的开发，不时召集需求评审会，大家一起讨论这样做有哪些问题，PD收集到意见反复修改需求直至最后一次评审通过，需求得以确认，状态变为开发中。当然，之后的需求微调总是无法避免，但需求冻结的里程碑要求在这之后就不要轻易改动了。<span id="more"></span></p><h5 id="22-开发阶段"><a class="markdownIt-Anchor" href="#22-开发阶段"></a> 2.2 开发阶段</h5><p>项目中的需求阶段之后，进入开发，PD需要不断地和开发测试人员确认各种细节。我们一直在想早期环节中考虑的所有细节，以期减少这种费时费力的确认，但事实证明细节总是多到无法预计，有的甚至要发布后才能被发现。</p><p>在开发提交测试之后，PD需要在测试环境中代表产品的用户做功能验收，确认一下产品和自己设计的是否相符，顺便也可以发现一些可用性问题，当然如果能让真实用户来验收则更好了，通常我们会组织一次需求评审会，让项目干系人来确认这些功能是不是大家想要的，如果有问题还可以补救，</p><p>最后功能上线。别忘了把FeatureList中相应的需求改为已发布，很显然需求发布之后仍然会有改动，可能是客户反馈了问题，或者自己想到了更好的解决方案。将它视作一个新的需求，或当作一个BUG，重新计入流程。</p><p>我们会把需求评审通过，视为项目中一个重要的里程碑，称作需求确认或需求冻结，之后进入开发阶段。如果还需要修改需求的话不是不可以，而是要更加慎重，甚至是强制走一些需求变更的流程。这也是为了更好的控制项目风险。在信息充分的情况下，随着项目的进行风险应该越来越小，否则项目必然有问题。</p><p>需求阶段之后的常规项目过程就是开发、测试、发布。需要注意的是，这类项目都是围绕着产品研发工作的，所以没有包括上线后的销售，运营，服务等活动。</p><p>立项和需求阶段是PD作为主要角色参与的环节，PD要随时配合开发测试确认需求。项目经理要做的就是控制，对于每个特定的项目应该在开始之前，就约定好各种管理方法，比如文档怎么管理，测试过程怎么管理，使用哪些技术工具等。</p><p>开发阶段开发经理的存在会帮PD省不少心。设计到设计评审，再到编码，再到单元测试，比较强的开发工程师可能叫开发经理、架构师、系统分析师，会带着普通工程师一起做概要设计、详细设计，如果项目涉及数据库、硬件系统的改动，那就还会带上运维的人员。设计完成以后会组织一次设计评审，PD和测试人员都会参与，审核一下工程师们对需求的理解是否正确，评审通过以后，就进入编码阶段。编码完成以后如果时间充裕可以做一些代码评审的工作，不过我们的项目一般都很紧张，代码评审的工作，通常只能在开发工程师提高自我修养的周例会上进行，之后工程师们需要对自己的代码做单元测试，自测环节做到位，可以减少后期测试同学很多的工作量，问题总是越早发现解决的成本越低，当开发工程师认为自测已经完成，那就可以把代码从开发环境上提交到测试环境了，按照开发计划当项目的主体部分提交测试的时候，我们又走过了一个里程碑开发完成。</p><h5 id="23-测试阶段"><a class="markdownIt-Anchor" href="#23-测试阶段"></a> 2.3 测试阶段</h5><p>开发工程师在设计与编码的同时，测试工程师也没有闲着，他们会继续细化和调整测试计划，并完成TC编写的任务。在TC中，测试人员会进行测试任务的描述，体现测试方法、方案、技术和策略，内容包括测试目标，测试环境、输入数据、测试步骤、预期结果、测试脚本等并形成文档。</p><p><code>测试阶段的主要任务：TC编写、TC评审、冒烟测试、功能评审、最后测试。</code></p><p>TC编写完成之后，测试经理会组织TC评审，时间一般在开发同学提交测试之前，PD和开发人员都要参与评审，再次确认大家对需求的理解是否一致，很多需求的细节无法在需求阶段考虑完全，我们会通过开发和测试阶段的反复沟通来不断的细化，TC评审通过了，待开发提交测试以后，测试的同学会迅速完成一轮冒烟测试，目的是确认软件基本功能正常，可以进行后续的正式测试工作。在测试人员正式开始测试的同时，PD又要登场了，我们会组织一次产品的功能评审，或者叫产品演示会，利用测试环境就可以把使用的产品在第一时间展示给所有的项目干系人，更进一步确保做出来的东西就是大家想要的，功能评审通过之后PD一般还会代表用户做更详细的UVT（或者称为验收测试），接下来测试的同学会做很多轮的测试，是一个发现BUG、开发修正、测试验证、发现新BUG的循环过程。从第二轮开始就可以叫做回归测试，在BUG都处理妥当之后，项目紧接着就进入了发布阶段。有的项目除了功能测试以外，还需要做性能测试，比如验证这个系统是否能承受1万用户同时访问的压力，公司也有特定的工程师来做这方面的事情，他们一般是多个产品共用的资源。在测试阶段，商业方面的准备工作也早已动起来了，PD可能要准备面向用户的功能卖点，介绍的文档、产品更新的公告、培训服务人员和销售人员。运营的同学可能已经在策划推广方案，销售的同学可能在更新销售说辞。</p><h5 id="24-发布阶段"><a class="markdownIt-Anchor" href="#24-发布阶段"></a> 2.4 发布阶段</h5><p>对用户影响较大的升级，可采用“分流发布”，或者叫“灰度发布”，即让一部分用户先用，然后收集反馈再决定大面积发布的时机。Gmail就经常采用这种方式，把一些还在实验室状态的功能先开放给小部分的用户试用。把握不大的项目，发布计划中还要加上“回滚方案”，一旦发布不成功，就赶紧把产品退回原来的状态。</p><p>正式的发布过程，是从更新“预发布环境”开始的，预发布环境会尽量模拟生产环境上的真实状态，比如数据库用的是同一个，测试人员会在预发布环境进行最后的回归测试，没问题的话，更新“生产环境”，测试人员再做一次最简单的回归测试，完成发布。当然，这么多次回归测试，其覆盖面不尽相同，越到后面的回归，测试的内容越少，直至只包含最重要TC的“最小集”，来简单判断系统是否能正常运行。</p><p>测试人员在确认完“发布标准”中的各项之后，会发出邮件通知同意发布，发布人员在没有收到通知前，不能自行发布。</p><p>测试人员在发布后，将做一轮生产环境的回归测试，测试完成后发出一封邮件通知“生产环境已验证完成，发布成功”。只有收到该邮件后，发布相关成员才能撤离现场。还有一点想说，发布的时间选择，能安排在白天的工作时间固然好，但很多互联网产品为了避开用户使用高峰，必须安排在晚上进行，难免弄到深更半夜。</p><h5 id="25-项目小结阶段"><a class="markdownIt-Anchor" href="#25-项目小结阶段"></a> 2.5 项目小结阶段</h5><p>项目经理撰写“项目发布公告”。小结一下做这个项目的心得体会，比如碰到了哪些问题，原因是什么，怎么解决的，如何避免再犯；项目的资源评估是否合理，收获了哪些经验，如何提高准确度；根据数据监控的反馈，分析出了什么结果，项目的商业目标是否达到等等。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1-评审&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-评审&quot;&gt;&lt;/a&gt; 1. 评审&lt;/h3&gt;
&lt;p&gt;哼哧哼哧写完需求文档，为了保证产品的质量，需求方案还必须要通过各方的评审，方可进入开发阶段。产品需求是产品每个干系人的事情，项目中的需求阶段通常会围绕着写作、评审、修改、评审的循环展开。评审就是项目中相关的几个小团队坐在一起，一方讲另外一方听，并确认统一认识，消除误解，及时发现偏差，防止问题随时间放大。不做评审看似省了时间，但往往隐藏了问题，待到其爆发的时候会耽误更多的事，而且会在谁负责的问题上纠缠不清，与其亡羊补牢，不如尽早在流程上预防，所谓防病优于治病。&lt;/p&gt;
&lt;p&gt;项目中最重要的三种角色，就是PD（Product Designer/Product Director）、开发人员、测试人员，由此派生出三次评审：需求评审、设计评审、测试评审。&lt;/p&gt;
&lt;h5 id=&quot;11-需求评审&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-需求评审&quot;&gt;&lt;/a&gt; 1.1 需求评审&lt;/h5&gt;
&lt;p&gt;需求评审是PRD评审、UC评审、DEMO评审的统称，评审会上PD把PRD和UC说给开发测试听，DEMO评审则由UE的同学主讲。在做出比较大的PRD之后马上安排一次评审，当然也会有UC和DEMO的半成品，以期尽早发现问题，比如业务规划的不合理、产品界面太丑陋、某功能技术上无法实现等。&lt;/p&gt;
&lt;p&gt;PRD的评审，会重点关注偏商业的内容，强烈建议叫上老板、营销人员、服务人员甚至用户一起来听。PRD通过以后，PD们会和UE的同学一起细化UC和DEMO，而开发的同学也会同步进行一些开发前的准备工作，比如细化和修正项目计划、部分统计的设计。&lt;/p&gt;
&lt;p&gt;接下来的DEMO评审决定了产品的外观项目，干系人最好都来把下关。而UC评审更偏重技术实现，商业团队的成员可以选择参加。&lt;/p&gt;
&lt;h5 id=&quot;12-设计评审&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#12-设计评审&quot;&gt;&lt;/a&gt; 1.2 设计评审&lt;/h5&gt;
&lt;p&gt;设计评审是在概要设计与详细设计完成之后进行，由开发工程师把对需求的理解，以设计文档的形式说给PD、测试听。&lt;/p&gt;
&lt;h5 id=&quot;13-测试评审&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#13-测试评审&quot;&gt;&lt;/a&gt; 1.3 测试评审&lt;/h5&gt;
&lt;p&gt;测试评审俗称TC评审，是在TC编写完成，测试开始执行之前进行，由测试工程师把对需求的理解，以TC的形式说给PD开发厅。&lt;/p&gt;
&lt;p&gt;每一种评审都可能有多轮，会上没问题就快速的通过，有小问题当场确认，大问题带回去。原则是改动较多的话，必须再次评审，审议不大可以通过。评审会议的组织者可以考虑都由QA担任，作为项目过程管理的一部分，也可以考虑由每次评审的主讲人发起。&lt;/p&gt;
&lt;p&gt;需求评审会的组织过程中，特别要注意两种容易漏掉的参与者，大家可以扩展应用到各种评审会上。一是能做决定的人，因为评审的时候，各方不可避免的会对需求有不同理解，从而出现争论，而很多问题都是公说公有理，婆说婆有理，谁也说服不了谁。这个时候啊，就需要有人能拍板，有人能负责。二是与此项目有关的产品接口人，他的参与可避免太晚发现与其他系统有冲突，修改起来措手不及，作为PD肯定是希望只要有点儿关系的人都来参加会议，但现实中呢是不可能的，所以必须识别出对当前项目来说谁更重要。&lt;/p&gt;
&lt;p&gt;再看需求的生老病死，之前是从某个需求本身的状态变化来看，现在我们把它融入项目再审视一番。除纯技术项目外，PD是产品不断改进的原动力，所以项目前期PD主导的环节比较多，而一个需求就在这些环节中生老病死了。我觉得可以用几个会议来概括，项目大小有不同，所以这里的会议不需要严格理解成会议室里一群人正襟危坐，有可能是两三个人围在电脑前的几分钟交流。&lt;/p&gt;
&lt;h3 id=&quot;2-项目中的各个阶段&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2-项目中的各个阶段&quot;&gt;&lt;/a&gt; 2. 项目中的各个阶段&lt;/h3&gt;
&lt;p&gt;项目开始之前，在产品团队内部，分析需求商业价值的需求讨论会、多个产品间的产品会议上，PD们带着自己的需求参与讨论，为那仅有的开发和测试资源PK，人性的本能让每个人都极力维护自己提出的需求，并设法反驳别人，当然了出发点都是为了用户，最终也会达成一致，活下来的需求会确定需求负责人，状态变为需求中。&lt;/p&gt;
&lt;h5 id=&quot;21-需求阶段&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#21-需求阶段&quot;&gt;&lt;/a&gt; 2.1 需求阶段：&lt;/h5&gt;
&lt;p&gt;项目中的需求阶段：项目启动之后PD就得抓紧时间完成需求的开发，不时召集需求评审会，大家一起讨论这样做有哪些问题，PD收集到意见反复修改需求直至最后一次评审通过，需求得以确认，状态变为开发中。当然，之后的需求微调总是无法避免，但需求冻结的里程碑要求在这之后就不要轻易改动了。&lt;/p&gt;</summary>
    
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>人生如棋---开局01</title>
    <link href="https://verasince1997.github.io/2024/09/29/%E5%9B%B4%E6%A3%8B/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A3%8B---%E5%BC%80%E5%B1%8001/"/>
    <id>https://verasince1997.github.io/2024/09/29/%E5%9B%B4%E6%A3%8B/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A3%8B---%E5%BC%80%E5%B1%8001/</id>
    <published>2024-09-29T08:45:55.322Z</published>
    <updated>2024-10-01T01:09:05.252Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>朗朗晴空 日照当头 静静深夜 月涌江流</p><p>心似晴空 理想当头 行似深夜 智慧江流</p><p>人生代代 无穷无已 你来我往 谁为先手</p><p>人生如棋 黑白相间  局里局外 一生好走</p></blockquote><p>放上《人生如棋》的填词，让它陪伴我一同成长。本文的行文逻辑：以几张图的形式引入概念。</p><p>曲三，围棋基本死活形状之一。被包围的棋子围有成拐弯的三个交叉点，也叫“弯三”。红框处是死活要点，此时黑棋被白棋围住：白棋先手于红框处落子，做成两眼成为活棋。黑棋先手于红框处落子，白成死棋。</p><p><img src="https://p.ipic.vip/f8zgqb.png" alt="image-20240929170913681"></p><p>直三：基本死活之一。一块棋被围，其眼位是直线形状的三个交叉点，称为“直三”。形势，若轮黑方走，下在A位可做活；若轮白方走，在A位破眼，黑子只有一只眼，黑被白杀。在对战中，后手做成直三往往是不能够做活的，因为当己方走完，对方会直接在A位破眼。</p><p><img src="https://p.ipic.vip/ydgjnl.png" alt="image-20240929172449049"></p><p>对于直三、曲三的死活结论是——先手活，后手死。</p><p>打劫：简称“劫”，也称“劫争”、“争劫”。对局双方从开劫、提劫、找劫、应劫、再提劫，直至消劫的整个过程，均可概括称为“打劫”。</p><p>黑白双方都把对方的一个棋子围住，这种局面下，如果轮白下，可以吃掉一个黑子；如果轮黑下，同样可以吃掉一个白子。因为如此往复就形成循环无解，所以围棋禁止“同形重复”。根据规则规定“提”一子后，对方在可以回提的情况下不能马上回提，要先在别处下一着，待对方应一手之后再回提。</p><p>如下图，轮白下子时，白棋先手于红框处落子，白吃黑一子；此时，黑不能立即回提白子，必须寻找劫材，即在别处下一着，待白方应后，再回提白子。但是，并非所有的劫材都会导致对方应一手，在价值判断取舍的情况下，对方也可能不应劫而解消劫争，“劫胜”也叫“消劫”。<span id="more"></span></p><p><img src="https://p.ipic.vip/keqm5d.png" alt="image-20240929175630977"></p><p>双活，是活棋的一种方式，又称为“共活”、“公活”或“两活”。“眼”，是连成一体的多个棋子所围成的一个或多个空白交叉点，眼即对手的禁入点。一般来说，有两个或两个以上“眼”的棋是活棋。双活并不是指两块棋各自活了，它只是两块棋都没有两只眼，但又不会死。没有两个眼但有气，双方终局时都不肯再着子紧气，也都同意不能从棋盘上拿走的棋，也是活棋，即双活棋。</p><p><img src="https://p.ipic.vip/wcn3y5.png" alt="image-20240929174435637"></p><p>只要谁先在公气里落了子，就会被对方直接提吃，像这些黑白双方纠缠一起，双方都没有两个眼，但都没法杀死对方的棋形称为“双活”。对于双活的结论是先手死，后手活。</p><p>白棋的两个活眼：</p><p><img src="https://p.ipic.vip/w6d7wm.png" alt="image-20240930091715716"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;朗朗晴空 日照当头 静静深夜 月涌江流&lt;/p&gt;
&lt;p&gt;心似晴空 理想当头 行似深夜 智慧江流&lt;/p&gt;
&lt;p&gt;人生代代 无穷无已 你来我往 谁为先手&lt;/p&gt;
&lt;p&gt;人生如棋 黑白相间  局里局外 一生好走&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;放上《人生如棋》的填词，让它陪伴我一同成长。本文的行文逻辑：以几张图的形式引入概念。&lt;/p&gt;
&lt;p&gt;曲三，围棋基本死活形状之一。被包围的棋子围有成拐弯的三个交叉点，也叫“弯三”。红框处是死活要点，此时黑棋被白棋围住：白棋先手于红框处落子，做成两眼成为活棋。黑棋先手于红框处落子，白成死棋。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/f8zgqb.png&quot; alt=&quot;image-20240929170913681&quot;&gt;&lt;/p&gt;
&lt;p&gt;直三：基本死活之一。一块棋被围，其眼位是直线形状的三个交叉点，称为“直三”。形势，若轮黑方走，下在A位可做活；若轮白方走，在A位破眼，黑子只有一只眼，黑被白杀。在对战中，后手做成直三往往是不能够做活的，因为当己方走完，对方会直接在A位破眼。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/ydgjnl.png&quot; alt=&quot;image-20240929172449049&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于直三、曲三的死活结论是——先手活，后手死。&lt;/p&gt;
&lt;p&gt;打劫：简称“劫”，也称“劫争”、“争劫”。对局双方从开劫、提劫、找劫、应劫、再提劫，直至消劫的整个过程，均可概括称为“打劫”。&lt;/p&gt;
&lt;p&gt;黑白双方都把对方的一个棋子围住，这种局面下，如果轮白下，可以吃掉一个黑子；如果轮黑下，同样可以吃掉一个白子。因为如此往复就形成循环无解，所以围棋禁止“同形重复”。根据规则规定“提”一子后，对方在可以回提的情况下不能马上回提，要先在别处下一着，待对方应一手之后再回提。&lt;/p&gt;
&lt;p&gt;如下图，轮白下子时，白棋先手于红框处落子，白吃黑一子；此时，黑不能立即回提白子，必须寻找劫材，即在别处下一着，待白方应后，再回提白子。但是，并非所有的劫材都会导致对方应一手，在价值判断取舍的情况下，对方也可能不应劫而解消劫争，“劫胜”也叫“消劫”。&lt;/p&gt;</summary>
    
    
    
    <category term="人生如棋" scheme="https://verasince1997.github.io/categories/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A3%8B/"/>
    
    
    <category term="围棋" scheme="https://verasince1997.github.io/tags/%E5%9B%B4%E6%A3%8B/"/>
    
  </entry>
  
  <entry>
    <title>项目坎坷的一生--产品与项目</title>
    <link href="https://verasince1997.github.io/2024/09/25/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E9%A1%B9%E7%9B%AE%E5%9D%8E%E5%9D%B7%E7%9A%84%E4%B8%80%E7%94%9F--%E4%BA%A7%E5%93%81%E4%B8%8E%E9%A1%B9%E7%9B%AE/"/>
    <id>https://verasince1997.github.io/2024/09/25/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E9%A1%B9%E7%9B%AE%E5%9D%8E%E5%9D%B7%E7%9A%84%E4%B8%80%E7%94%9F--%E4%BA%A7%E5%93%81%E4%B8%8E%E9%A1%B9%E7%9B%AE/</id>
    <published>2024-09-25T12:10:19.055Z</published>
    <updated>2024-10-01T01:16:43.642Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>产品 VS 项目</p></blockquote><p><code>产品：解决问题的东西。</code></p><p><code>项目：只会进行一次，包含多项互相关联的任务，并且有绩效、时间成本、范围限制的一项工作，项目是一个过程。</code></p><blockquote><p>做产品 VS 做项目</p></blockquote><p>我们从三个方面来比较做产品和做项目。</p><p>第一，从生命周期的角度来看，做产品的生命周期相对较长，关注的是整个产品从规划到制造、维护、消亡的过程。而项目有特定的指标，所以生命周期较短。通常在项目开始以前就有明确的起始和结束的时间，通过验收则表示项目的生命周期就算完成。</p><p>开始做一个产品的时候，没法明确这款产品何时结束，一般会随着时间的推移、市场的变化、公司战略调整等因素，渐渐走向生命周期完结。所以会有一个已经结项的项目，但不会有一个已经完成的项目，只有不断完善中的产品，除非它被新产品替代。</p><p>第二，从具体要做的事情来看，做产品的过程会有更多的探索。随着各种内外部信息的变化，产品负责人需要不断地修正自己的判断，给出合适的创新。而项目在开始的时候就已经有明确的目标，更注重计划与控制。项目的过程很像是执行一个任务。无论是做产品还是做项目，都需要与团队成员的协调沟通，对未来一段时间做出计划。</p><p>第三，从产出物的角度来看，产品是可以批量生产，或者提供给大量用户，所以相对通用。通常考虑用有限的资源去满足更多的，更能有回报的需求。而项目只能进行一次，意味着每次都是定制的，个性化的。通常为了满足特定的需求，产出物也比较个性化，这就意味着项目要满足那个特定的需求。当然，我们会看到有的项目产出，经过改造成为更通用的产品，或者有的产品也可经历个性化定制及做项目。</p><blockquote><p>产品经理 VS 项目经理</p></blockquote><p>一个是product manager，一个是project manager，工作都需要跨团队，工作范围也有重叠，简称还都是pm。</p><p>产品经理靠想，产品经理是做正确的事，其所领导的产品是否符合市场的需求，是否能给公司带来利润。</p><p>项目经理靠做，项目经理是把事情做正确，把事情做得完美，在时间成本和资源约束的条件下完成目标。</p><p>产品经理关注的是做正确的事，关注的是产品生命的周期，关注的是产品是否能赚钱，是否能持续的赚钱。因此产品经理必须要能够规划整个产品的架构和发展路线，能够确定产品的定位和受众，能够预计产品真正的价值和效益。</p><p>项目经理是需要正确的做事情，即按照产品规划制定的项目目标，正确地做事情，项目能够按照目标完成，则项目就是成功的。即使项目的产品不能真正盈利，那往往也是产品规划出现了失误。项目经理关注的是项目能否按既定的目标顺利完成。产品究竟应该规划哪些功能点，那是产品经理的事情，是项目范围的输入。</p><p>产品经理是内部驱动，项目经理是外部驱动。对产品经理来说，最重要的是判断力与创造力。产品经理决定做不做，做什么，做多少，保证方向正确。它是产生一个想法，我要把它实现。对项目经理来说，最重要的是执行力与控制力。项目经理决定怎么做，谁来做，何时做，保证方法得当，即接到一个任务，要把它完成。<span id="more"></span></p><p>为什么让产品经理管项目呢？</p><p>两个PM的职责确实有所不同，连最重要的能力要求都有很大区别，所以一个人很难同时做好这两项工作。那么为什么在很多团队里都让产品经理来做项目管理？</p><p>很多产品新人就是单纯的在做产品功能设计，在为产品发起的一个个项目中，扮演一个PD的角色。主要负责做多少，怎么做的问题。项目经理是开发经理接任，他负责何时做，谁来做的问题。这样有一些弊端，对PD考核是产品的商业价值，比如用户活跃度等，而这些指标和产品的用户体验关系极大。想把产品的用户体验做到极致，让用户轻松，开发的同学要额外做很多在他们看来价值不大的细节工作。比如一个最简单的登录页面，有两个输入框，一个填账号，一个填密码，想体验好一点就要考虑如何限制输入内容长度，如何控制输入非法字符，如何给用户提示等。仅仅是输入账号的字符长度控制问题，就又要考虑是点击登录提交数据时判断，是鼠标焦点移动到密码输入框时判断？还是输入账号时随时计算长度直接判断？</p><p>开发工程师的考核一般是项目的完成情况，BUG数量，很显然如果他们做项目经理，就会倾向于简化项目，尽量少做，做自己熟悉的，使得项目顺利完成并且BUG很少，但是做出来的东西也许会商业价值不足，用户体验不好。由于上述原因，让PD兼任项目经理，在项目中仍然保留了开发经理，毕竟在哪位工程师更适合做哪个任务，需要多少时间这类问题上他们是专家。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;产品 VS 项目&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;产品：解决问题的东西。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;项目：只会进行一次，包含多项互相关联的任务，并且有绩效、时间成本、范围限制的一项工作，项目是一个过程。&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;做产品 VS 做项目&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们从三个方面来比较做产品和做项目。&lt;/p&gt;
&lt;p&gt;第一，从生命周期的角度来看，做产品的生命周期相对较长，关注的是整个产品从规划到制造、维护、消亡的过程。而项目有特定的指标，所以生命周期较短。通常在项目开始以前就有明确的起始和结束的时间，通过验收则表示项目的生命周期就算完成。&lt;/p&gt;
&lt;p&gt;开始做一个产品的时候，没法明确这款产品何时结束，一般会随着时间的推移、市场的变化、公司战略调整等因素，渐渐走向生命周期完结。所以会有一个已经结项的项目，但不会有一个已经完成的项目，只有不断完善中的产品，除非它被新产品替代。&lt;/p&gt;
&lt;p&gt;第二，从具体要做的事情来看，做产品的过程会有更多的探索。随着各种内外部信息的变化，产品负责人需要不断地修正自己的判断，给出合适的创新。而项目在开始的时候就已经有明确的目标，更注重计划与控制。项目的过程很像是执行一个任务。无论是做产品还是做项目，都需要与团队成员的协调沟通，对未来一段时间做出计划。&lt;/p&gt;
&lt;p&gt;第三，从产出物的角度来看，产品是可以批量生产，或者提供给大量用户，所以相对通用。通常考虑用有限的资源去满足更多的，更能有回报的需求。而项目只能进行一次，意味着每次都是定制的，个性化的。通常为了满足特定的需求，产出物也比较个性化，这就意味着项目要满足那个特定的需求。当然，我们会看到有的项目产出，经过改造成为更通用的产品，或者有的产品也可经历个性化定制及做项目。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;产品经理 VS 项目经理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个是product manager，一个是project manager，工作都需要跨团队，工作范围也有重叠，简称还都是pm。&lt;/p&gt;
&lt;p&gt;产品经理靠想，产品经理是做正确的事，其所领导的产品是否符合市场的需求，是否能给公司带来利润。&lt;/p&gt;
&lt;p&gt;项目经理靠做，项目经理是把事情做正确，把事情做得完美，在时间成本和资源约束的条件下完成目标。&lt;/p&gt;
&lt;p&gt;产品经理关注的是做正确的事，关注的是产品生命的周期，关注的是产品是否能赚钱，是否能持续的赚钱。因此产品经理必须要能够规划整个产品的架构和发展路线，能够确定产品的定位和受众，能够预计产品真正的价值和效益。&lt;/p&gt;
&lt;p&gt;项目经理是需要正确的做事情，即按照产品规划制定的项目目标，正确地做事情，项目能够按照目标完成，则项目就是成功的。即使项目的产品不能真正盈利，那往往也是产品规划出现了失误。项目经理关注的是项目能否按既定的目标顺利完成。产品究竟应该规划哪些功能点，那是产品经理的事情，是项目范围的输入。&lt;/p&gt;
&lt;p&gt;产品经理是内部驱动，项目经理是外部驱动。对产品经理来说，最重要的是判断力与创造力。产品经理决定做不做，做什么，做多少，保证方向正确。它是产生一个想法，我要把它实现。对项目经理来说，最重要的是执行力与控制力。项目经理决定怎么做，谁来做，何时做，保证方法得当，即接到一个任务，要把它完成。&lt;/p&gt;</summary>
    
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>一个需求的奋斗史--需求筛选</title>
    <link href="https://verasince1997.github.io/2024/09/19/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E7%AD%9B%E9%80%89/"/>
    <id>https://verasince1997.github.io/2024/09/19/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E7%AD%9B%E9%80%89/</id>
    <published>2024-09-19T14:17:03.567Z</published>
    <updated>2024-09-25T13:42:25.551Z</updated>
    
    <content type="html"><![CDATA[<p>做项目的终极目标就是多快好省，即范围大、时间短、品质高、资源省。但又要马儿跑，又要马儿不吃草的事情是没有的，所以我们通常是在上述四个要求中做平衡。一般采取敏捷方法，有比较固定的迭代周期，一般是二到四周；有一个人员相对固定的团队，即项目资源确定；此外任何时候都要保证项目品质，最后能变的只能是量，项目范围。</p><p>当有了项目时间长短，可以按经验的比例，估计出留给开发的时间有几天，团队里有多少开发工程师也是知道的，所以可以直接算出有多少可用工作量，同样以人天为单位。之前把产品需求列表按照性价比从大到小排序过，从上往下看每一行后面还都对应着一个工作量，现在只要做一个简单的加法，一行又一行的从上到下，依次纳入项目，能做多少一目了然。这个动作叫做需求打包。</p><p>而对这些需求的整体描述，也就是商业需求文档里的功能说明。当然了这只是一个基准，可变因素非常的多，所以每次产品会议都要准备好几个项目让大老板们选，每个项目也有可能在产品会议，被砍掉部分需求，所以可以先相对随意的超出可用工作量。</p><p>需求打包几个需要注意的地方：</p><p>第一，需求打包最好打包类似的功能点，是否类似取决于需求的基本属性，一般来说，业务上的逻辑关系密切的需求才会包含在一个项目里，这也很好理解啊，否则就是一个纯粹修修补补的小需求项目了。实际操作中，打包多大，更多的是取决于这一点。更好的方法是需求在打包以后通过业务逻辑图的方式实现可视化，可以更直观的给别人讲解。</p><p>第二，需求依赖，功能之间互相有依赖关系，那些只能先做的功能，应该在产品需求列表里注明，功能与人力资源之间的依赖关系，也会经常存在。比如有些功能只能由团队里的特定人员来做，在这里评估工作量的时候不会考虑谁来做的问题，在正式立项以后，组建团队的时，候会重点考虑，当然长期来说为了避免这类风险，提升与平衡团队成员的力才是王道。</p><p>第三，需求的力度大小问题。</p><p>商业价值很高的功能，如果细分的话，会发现其中也有价值相对低的部分，所以需求的力度应该尽量细，前提是细化引起的管理成本上升，也在可接受的范围内。比如大开间办公区里的灯，不太可能用一个开关控制，也不可能每个开关只能控制一盏灯，具体细掉多少要根据具体情况具体分析，在需求列表里出现的任意一行，工作量最好不要超过五人天。</p><p>一般来说，产品会议一个月一次，当然这和产品性质有关。如果产品周期比较长，那也可以两三个月一次。当某个产品团队开始登场亮相的时候，一般要回顾上一次的产品会议通过的项目现在进展如何，是否需要调整时间进度，是否需要追加资源，是否有重大需求变更，已经发布的项目有什么问题？这样一方面是为了让大老板们更新对各个项目的信息，更重要的是为了积累经验，让今后产品会议上的决策越来越合理，回顾之后就是最关键的部分，拿出准备好的商业需求文档。每个产品都会拿出三五个，占满二到三倍的潜在资源，这里说的潜在资源是指相对固定的开发测试人员，因为技术人员有对产品的熟悉问题，所以在短时间内，不可能太多的人同时转去做其他产品，这也就意味着潜在的人力资源数量是在一个值附近做微小浮动的。所以我们也可以认为，在一定程度上，资源的争夺是以产品间的争夺为辅，产品内多个项目的争夺为主。很有意思的是，这三五个商业需求文档，通常是产品团队里不同的人做出来的，所以内部也会争夺的你死我活。</p><p>接下来的重头戏是一直提到的商业需求文档，刚刚把需求打好包，接下来就要描述一下这个包了。这就是商业需求文BRD。它是参加资源争夺战的武器。BRD、MRD、PRD这几个词是从商业的描述，渐渐过渡到对技术的描述。我经历的团队在实际操作中通常只写两种文档，一个是给大老板们看的BRD，包含了BRD以及MRD的部分内容。另一个是在项目中写的PRD。</p><p>BRD怎么写都包含哪些内容呢？项目背景、我们在哪里？为什么要做这个项目？解决了一个什么问题，可以列出一些数据说明项目的必要性、商业价值，我们去哪里。最关键的重点，做这个项目有什么价值，预测一下相关数字的变化，提出这个项目的商业目标功能需求描述。（非功能需求描述：通过做哪些事情来达到目标，把打包好的需求描述一下，可以通过功能列表的形式表达，但最好画出业务逻辑关系。）</p><p>资源评估第二个重点，大老板们要看成本，他们在了解达成项目的目标需要多大的花费以后才能做出决策。有的项目会有一些潜在风险，这个时候不妨抛给老板们看一下，并且给出自己的对策。说不定你觉得是很大的麻烦，在老板那里一句话就可以搞定了。而且由于信息的不对称，我们无法了解某些功能是否会与公司将来的战略冲突。这时候提出来也是让老板们把下关。<span id="more"></span></p><p>BRD转化为项目也并非一一对应，很可能老板会把多个BRD合并为一个项目。或者把一个BRD拆成多个项目，或者直接砍碎了再重新组合，这都无所谓。不管怎么说产品会议开完以后，终于确定了接下来一段时间要做哪些需求了，准备启动项目迎接新的开始等等啊。当发现一个功能可有可无的时候，甚至只要没有强烈的理由要做的时候，要明确的选择不做。如果不放弃最终会被自己折腾死。比如，一个最简单的评论功能，既然可以发评论，那么是不是需要改评论？删评论？发的权限是否要管理员设置？那么改的权限呢？删的权限呢？是否可以引用别人的评论？评论被人引用了，是否可以再改？如果可以改，那么是不是要保留修改记录。如果管理员改了一个评论，那么作者是不是不能再改，评论是否要有数量和时间限制？评论要不要翻页？如果要翻页，是在本页翻，还是打开新页？评论能不能带图片？带了图片，那么是不是能上传？能上传之后是不是要删除？是不是要提供自定义评论顺序？需求越来越多让人崩溃。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;做项目的终极目标就是多快好省，即范围大、时间短、品质高、资源省。但又要马儿跑，又要马儿不吃草的事情是没有的，所以我们通常是在上述四个要求中做平衡。一般采取敏捷方法，有比较固定的迭代周期，一般是二到四周；有一个人员相对固定的团队，即项目资源确定；此外任何时候都要保证项目品质，最后能变的只能是量，项目范围。&lt;/p&gt;
&lt;p&gt;当有了项目时间长短，可以按经验的比例，估计出留给开发的时间有几天，团队里有多少开发工程师也是知道的，所以可以直接算出有多少可用工作量，同样以人天为单位。之前把产品需求列表按照性价比从大到小排序过，从上往下看每一行后面还都对应着一个工作量，现在只要做一个简单的加法，一行又一行的从上到下，依次纳入项目，能做多少一目了然。这个动作叫做需求打包。&lt;/p&gt;
&lt;p&gt;而对这些需求的整体描述，也就是商业需求文档里的功能说明。当然了这只是一个基准，可变因素非常的多，所以每次产品会议都要准备好几个项目让大老板们选，每个项目也有可能在产品会议，被砍掉部分需求，所以可以先相对随意的超出可用工作量。&lt;/p&gt;
&lt;p&gt;需求打包几个需要注意的地方：&lt;/p&gt;
&lt;p&gt;第一，需求打包最好打包类似的功能点，是否类似取决于需求的基本属性，一般来说，业务上的逻辑关系密切的需求才会包含在一个项目里，这也很好理解啊，否则就是一个纯粹修修补补的小需求项目了。实际操作中，打包多大，更多的是取决于这一点。更好的方法是需求在打包以后通过业务逻辑图的方式实现可视化，可以更直观的给别人讲解。&lt;/p&gt;
&lt;p&gt;第二，需求依赖，功能之间互相有依赖关系，那些只能先做的功能，应该在产品需求列表里注明，功能与人力资源之间的依赖关系，也会经常存在。比如有些功能只能由团队里的特定人员来做，在这里评估工作量的时候不会考虑谁来做的问题，在正式立项以后，组建团队的时，候会重点考虑，当然长期来说为了避免这类风险，提升与平衡团队成员的力才是王道。&lt;/p&gt;
&lt;p&gt;第三，需求的力度大小问题。&lt;/p&gt;
&lt;p&gt;商业价值很高的功能，如果细分的话，会发现其中也有价值相对低的部分，所以需求的力度应该尽量细，前提是细化引起的管理成本上升，也在可接受的范围内。比如大开间办公区里的灯，不太可能用一个开关控制，也不可能每个开关只能控制一盏灯，具体细掉多少要根据具体情况具体分析，在需求列表里出现的任意一行，工作量最好不要超过五人天。&lt;/p&gt;
&lt;p&gt;一般来说，产品会议一个月一次，当然这和产品性质有关。如果产品周期比较长，那也可以两三个月一次。当某个产品团队开始登场亮相的时候，一般要回顾上一次的产品会议通过的项目现在进展如何，是否需要调整时间进度，是否需要追加资源，是否有重大需求变更，已经发布的项目有什么问题？这样一方面是为了让大老板们更新对各个项目的信息，更重要的是为了积累经验，让今后产品会议上的决策越来越合理，回顾之后就是最关键的部分，拿出准备好的商业需求文档。每个产品都会拿出三五个，占满二到三倍的潜在资源，这里说的潜在资源是指相对固定的开发测试人员，因为技术人员有对产品的熟悉问题，所以在短时间内，不可能太多的人同时转去做其他产品，这也就意味着潜在的人力资源数量是在一个值附近做微小浮动的。所以我们也可以认为，在一定程度上，资源的争夺是以产品间的争夺为辅，产品内多个项目的争夺为主。很有意思的是，这三五个商业需求文档，通常是产品团队里不同的人做出来的，所以内部也会争夺的你死我活。&lt;/p&gt;
&lt;p&gt;接下来的重头戏是一直提到的商业需求文档，刚刚把需求打好包，接下来就要描述一下这个包了。这就是商业需求文BRD。它是参加资源争夺战的武器。BRD、MRD、PRD这几个词是从商业的描述，渐渐过渡到对技术的描述。我经历的团队在实际操作中通常只写两种文档，一个是给大老板们看的BRD，包含了BRD以及MRD的部分内容。另一个是在项目中写的PRD。&lt;/p&gt;
&lt;p&gt;BRD怎么写都包含哪些内容呢？项目背景、我们在哪里？为什么要做这个项目？解决了一个什么问题，可以列出一些数据说明项目的必要性、商业价值，我们去哪里。最关键的重点，做这个项目有什么价值，预测一下相关数字的变化，提出这个项目的商业目标功能需求描述。（非功能需求描述：通过做哪些事情来达到目标，把打包好的需求描述一下，可以通过功能列表的形式表达，但最好画出业务逻辑关系。）&lt;/p&gt;
&lt;p&gt;资源评估第二个重点，大老板们要看成本，他们在了解达成项目的目标需要多大的花费以后才能做出决策。有的项目会有一些潜在风险，这个时候不妨抛给老板们看一下，并且给出自己的对策。说不定你觉得是很大的麻烦，在老板那里一句话就可以搞定了。而且由于信息的不对称，我们无法了解某些功能是否会与公司将来的战略冲突。这时候提出来也是让老板们把下关。&lt;/p&gt;</summary>
    
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>一个需求的奋斗史--需求商业价值分析</title>
    <link href="https://verasince1997.github.io/2024/09/19/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E5%95%86%E4%B8%9A%E4%BB%B7%E5%80%BC%E5%88%86%E6%9E%90/"/>
    <id>https://verasince1997.github.io/2024/09/19/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E5%95%86%E4%B8%9A%E4%BB%B7%E5%80%BC%E5%88%86%E6%9E%90/</id>
    <published>2024-09-19T13:45:25.940Z</published>
    <updated>2024-09-19T14:15:38.100Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>分析需求的商业价值。</p></blockquote><p>一个公司做任何产品，一个产品做任何需求，最终都是要满足一定的商业目的的，所以需求的商业价值是最关键的内容。使用<strong>重要性，紧急度，持续时间</strong>三个指标来衡量商业价值。有条件的团队最好利用群体智慧，举行需求讨论会。</p><p><img src="https://p.ipic.vip/3mvk9h.png" alt="image-20240919213609005"></p><p>某个用户是老板的朋友，通过大老板天外飞仙的提过来一个需求，就很可能是一个超级紧急的需求，但重要性未必很高。持续时间是指<strong>需求是有生命的，有的长寿，有的短寿</strong>。比如迎合过年过节的运营活动需求，一般就比较短寿。商业价值（或者叫商业优先级），是对上述几种商业价值指标的综合评判，是整个需求列表中最核心的部分，这里的判断直接影响着产品未来的方向。</p><p>还可在列表里增加一列<strong>商业价值描述</strong>，即这个需求的卖点是什么，可以给用户提供什么价值，对公司又有什么帮助。如此重要的商业价值评估，是在需求讨论会上由产品团队集体讨论，再叫上有必要的干系人，比如销售、实施等。对于某个需求，需求提交人是对它最熟悉的，提交人先基于自己对商业目标的理解做一番陈述，主观定个级别，比如高中低，然后再由大家讨论，上述那么多的维度可以加权平均，得到综合的商业价值。所以在这个讨论会之前，每个人都应该做好功课。</p><p>绝对不能因为某个需求的商业价值很大就马上去做，也不能因为另一个需求的商业价值不大就不做了。我们现在知道了每个需求的商业价值，接下来决定做哪个，还需要另一个关键的指标，那就是实现难度。有时候我们会叫上技术人员代表参与需求讨论会，当场确定这个指标，但更多的情况是留给做技术的同学一点儿时间。会后与相关的人员讨论确定。</p><p>但实现难度太难量化，把工作量简化为开发量，项目各类人力资源有产品开发，测试，服务等，但一般情况下，团队里产品人员资源相对富裕，测试资源可以调配，服务资源可以临时补充，所以开发资源经常成为瓶颈。于是我们一般评估每个需求的开发工程师的工作量来表征其实现难度，这背后的道理是以团队里的瓶颈资源为评估标准，这个时候需求其实并不明确，只知道要做哪些，还是比较粗略的，而具体怎么做根本都没有考虑，所以有的技术人员呢会觉得无法评估开发量。这一点很正常，他们说了你们不明确每个需求怎么做，他们就无法准确评估开发量，我们说没有那么多时间明确每个需求该怎么做。你们不评估每个需求的开发量我们就不知道有哪些值得进一步分析怎么做而哪些又不值啊，于是就死循环了这类先有鸡还是先有蛋的问题。</p><p>其实也无需纠缠，实际的开发量是非评估不可的，把它叫做初评，允许误差，而且会要经验丰富的人来评估，通常是技术经理或者系统分析师，架构师，他们做出简单的评估，并且靠不断的实践来反复修正。评估者通常估计自己做这个需求要多少时间，然后乘以一个系数，这个系数大于一，反映着相应技术团队的平均技术能力这里的评估一般用人天为单位。某个需求需要一人天，意味着一个人做一个工作日。相对于初评，在项目启动之后，制定项目开发计划的时候，还会有一次更精确的评估，那个时候需求怎么做已经知道有哪位开发工程师来做，可以推算出相对准确的工期。工期和工作量是有很大区别的。比如生一个小孩儿需要一个女人十个月的时间，工作量可以说是十人月，但十个女人一个月的时间同样十人月是绝对完成不了。这个任务的不管几个人工期都只能是十个月。<span id="more"></span></p><p>我们已经做了需求采集；把用户需求转化为产品需求；知道了某个需求的基本属性、种类、商业价值、开发量。现在似乎应该开始写文档干活了吧？但经验告诉我们不是这样的，绝对不能因为某个需求的实现难度小，就马上去做。也不能因为另一个需求的实现难度大，就不做。说实话，能在列表里出现的需求，严格意义上讲没有任何一个是没有价值的，也没有任何一个是做不了的，那么到底先做哪个后做哪个呢？不要试图满足所有用户，一切皆看<strong>性价比</strong>，性价比等于<strong>商业价值除以实现难度</strong>，其中实现难度可以简化为开发量。那么现在可以做决定了。我们把产品需求列表按照性价比一列从大到小排序，先做排在上面的就可以了。实际工作中，对于性价比的判断还是会经常有偏差。一个原因是自己经常和哪类人接触，和工程师直接接触，经常听到他们抱怨某个需求太麻烦之类的，综合考虑的时候有点儿倾向于做实现难度小的；而如果经常和销售运营的同学一起开会，就会倾向于更多的考虑这个商业的价值。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;分析需求的商业价值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个公司做任何产品，一个产品做任何需求，最终都是要满足一定的商业目的的，所以需求的商业价值是最关键的内容。使用&lt;strong&gt;重要性，紧急度，持续时间&lt;/strong&gt;三个指标来衡量商业价值。有条件的团队最好利用群体智慧，举行需求讨论会。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/3mvk9h.png&quot; alt=&quot;image-20240919213609005&quot;&gt;&lt;/p&gt;
&lt;p&gt;某个用户是老板的朋友，通过大老板天外飞仙的提过来一个需求，就很可能是一个超级紧急的需求，但重要性未必很高。持续时间是指&lt;strong&gt;需求是有生命的，有的长寿，有的短寿&lt;/strong&gt;。比如迎合过年过节的运营活动需求，一般就比较短寿。商业价值（或者叫商业优先级），是对上述几种商业价值指标的综合评判，是整个需求列表中最核心的部分，这里的判断直接影响着产品未来的方向。&lt;/p&gt;
&lt;p&gt;还可在列表里增加一列&lt;strong&gt;商业价值描述&lt;/strong&gt;，即这个需求的卖点是什么，可以给用户提供什么价值，对公司又有什么帮助。如此重要的商业价值评估，是在需求讨论会上由产品团队集体讨论，再叫上有必要的干系人，比如销售、实施等。对于某个需求，需求提交人是对它最熟悉的，提交人先基于自己对商业目标的理解做一番陈述，主观定个级别，比如高中低，然后再由大家讨论，上述那么多的维度可以加权平均，得到综合的商业价值。所以在这个讨论会之前，每个人都应该做好功课。&lt;/p&gt;
&lt;p&gt;绝对不能因为某个需求的商业价值很大就马上去做，也不能因为另一个需求的商业价值不大就不做了。我们现在知道了每个需求的商业价值，接下来决定做哪个，还需要另一个关键的指标，那就是实现难度。有时候我们会叫上技术人员代表参与需求讨论会，当场确定这个指标，但更多的情况是留给做技术的同学一点儿时间。会后与相关的人员讨论确定。&lt;/p&gt;
&lt;p&gt;但实现难度太难量化，把工作量简化为开发量，项目各类人力资源有产品开发，测试，服务等，但一般情况下，团队里产品人员资源相对富裕，测试资源可以调配，服务资源可以临时补充，所以开发资源经常成为瓶颈。于是我们一般评估每个需求的开发工程师的工作量来表征其实现难度，这背后的道理是以团队里的瓶颈资源为评估标准，这个时候需求其实并不明确，只知道要做哪些，还是比较粗略的，而具体怎么做根本都没有考虑，所以有的技术人员呢会觉得无法评估开发量。这一点很正常，他们说了你们不明确每个需求怎么做，他们就无法准确评估开发量，我们说没有那么多时间明确每个需求该怎么做。你们不评估每个需求的开发量我们就不知道有哪些值得进一步分析怎么做而哪些又不值啊，于是就死循环了这类先有鸡还是先有蛋的问题。&lt;/p&gt;
&lt;p&gt;其实也无需纠缠，实际的开发量是非评估不可的，把它叫做初评，允许误差，而且会要经验丰富的人来评估，通常是技术经理或者系统分析师，架构师，他们做出简单的评估，并且靠不断的实践来反复修正。评估者通常估计自己做这个需求要多少时间，然后乘以一个系数，这个系数大于一，反映着相应技术团队的平均技术能力这里的评估一般用人天为单位。某个需求需要一人天，意味着一个人做一个工作日。相对于初评，在项目启动之后，制定项目开发计划的时候，还会有一次更精确的评估，那个时候需求怎么做已经知道有哪位开发工程师来做，可以推算出相对准确的工期。工期和工作量是有很大区别的。比如生一个小孩儿需要一个女人十个月的时间，工作量可以说是十人月，但十个女人一个月的时间同样十人月是绝对完成不了。这个任务的不管几个人工期都只能是十个月。&lt;/p&gt;</summary>
    
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>一个需求的奋斗史--需求分析</title>
    <link href="https://verasince1997.github.io/2024/09/17/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
    <id>https://verasince1997.github.io/2024/09/17/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</id>
    <published>2024-09-17T12:35:53.638Z</published>
    <updated>2024-10-01T01:08:23.674Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>需求分析：从用户提出的需求出发，找到用户内心真正的渴望，再转化为产品需求的过程。</p></blockquote><p>听到过一个说法，说需求分析与常见的技术分析最大的不同是思路本质的差异。技术分析是树干到树枝到树叶的任务分解过程，技术人员很适应并乐于用这种方式思考，可以把大问题分解成小问题，并且发现难点，注意攻克。不少需求人员都是做技术出身的，所以开始往往会用这种思路做需求，听到客户提出的功能点，直接想怎么做系统设计了。这导致有的时候需求分析甚至已经越俎代庖到详细设计的职责了，大多数人在生活中也习惯用这样的方法来对待问题。</p><p>而真实的情况是，需求分析是首先树叶到树枝到枝干，其次是树干到树枝到树叶的分析过程。所以说，完整的需求分析是一个分总分的过程，一方面不能漏掉提炼用户需求的这个过程，目的是透过现象看本质，另一方面也不能停在本质上。试想，如果做到树干就结束，后端的执行人员可能还是不知道要做什么东西。所以我们还要继续把树干再重新分解成树枝树叶。伟大的需求分析师可以无视用户想要的东西，去探究他内心真正的渴望，再给出更好的解决方案或者说是用户真正需要的东西。</p><p>需求来源于理想与现实的差距，那么减小这个差距就有三种方式。</p><ul><li><p>改变现状是我们最常用的，去开发某种产品，但也是最笨的方法。</p></li><li><p>降低理想，不要忽视精神的力量，什么打预防针，丑话说在前头啊这类的句子，想必大家都经常听到。</p></li><li><p>转移需求，因为人类的注意力是有限的，所以引导用户去关注其他事物，他就会觉得这个差距没那么可憎了。我们也可以说，人的行为是需求驱动的，想改变人的行为，可以寻找更强烈的需求展现给他，而让他不再纠结于原来的需求。短期利益：直接做用户要我们做的就得了。我们的产品通常都是希望用户长期使用，并且后续的服务也是我们来做，长期利益，不是一锤子买卖。即满足用户的需求不一定要做新产品或者新功能，而是更应该想想是否有四两拨千斤的妙招。</p></li></ul><p>我们能不能再开阔一点儿，不劳用户的大驾，直接达到产品设计的最高境界—<strong>创造需求</strong>。<br>创造需求工作中典型的场景就是老板或者产品人员的突发奇想，这些灵感在潜意识里都有一定的依据。是基于对用户，市场，产品的充分理解。需求分析的过程其实也有创造需求的成分。当一个新人真的能力不足的时候，不妨先做用户提出的需求，而不要自己去胡乱分析用户的需求。而对于一个团队来说，要尽量避免只有能力不足的需求分析人员这种情况出现。</p><p>所以接下来我们老老实实的开始给需求做一次DNA检测，给需求做一次DNA检测。<br>我们<strong>首先把用户需求转化为产品需求</strong>，然后一步步确定每个产品需求的基本属性，商业价值，实现难度，性价比等需求分析。（需求转化到确定基本属性，到分析商业价值到初评实现难度，最后计算性价比。）特别提一下这里确定的是产品需求的各种属性，不同于之前提到的单项需求卡片里描述的用户需求的各种属性。</p><p>检测的第一步就是需求转化。<br>现在我们有很多用户需求可能记录在单项需求卡片里，可能记录在EXCEL里，可能是用WORD随意写的几句话，也可能只是一张思维导图。值得一提的是，用户需求与产品需求是多对多的关系。我们可能用多个功能来满足一个用户的需求，也可能用一个功能来满足多个用户的需求，甚至是用几个产品需求来满足几个用户需求，其中并没有一一对应的关系。</p><p>对任何产品来说，只要需求采集的功夫做足了你就会发现产品需求列表行数超多，所以在需求转化过程中我们也会做一轮筛选，把明显不靠谱的用户需求直接过滤掉，不计入上述列表，是否明显不靠谱那就由你来把握了。不要把没资源做、短期内技术有难点的用户需求给猎杀了。</p><p>需求种类知多少？需求的提出者需要自己辨别一下这个需求的种类，为后续的商业价值判断提供一些辅助信息。<br>需求分类可以分为新增功能、功能改进、体验提升、BUG修复、内部需求等。其实产品需求远非我们直接可以想到的，还包括了很多非功能的需求，比如性能、可培训、可维护、可扩展。有很多需求不是为终端用户做的，而是为销售服务，测试团队的同学做的。举几个例子论坛需要支持1000人同时在线这是一个性能需求；系统功能升级必须在发布两周以前完成对客服部门的培训，这是一个培训需求；用户操作日志需要记录，这是一个内部数据分析的需求。通常来说，产品功能需求加产品非功能需求等于产品需求，而产品需求，加市场需求，加开发需求，加测试需求，加服务需求等于产品包需求。对这些概念感兴趣同学可以去查阅需求管理的相关资料层次。<span id="more"></span></p><p>还可从雪中送炭与锦上添花的角度去理解，雪中送炭是基本功能，对用户很有用，产品缺了这个功能根本跑不起来，比如邮件系统里的收发；锦上添花的功能是指非必须的，用户有时用得到，有的话会给用户的使用带来方便，比如发EMAIL时候填写收件人，系统根据你输入的内容自动提示你曾经发送过的邮件联系人。<br>我们在和用户接触的过程中，会明显地感受到这两种需求的不同，没有雪中送炭的功能，就像系统有缺陷一样，所以应当优先考虑。而当一个锦上添花的功能被用户普遍接受以后，几乎所有产品也都拥有了，也就渐渐发展提升为雪中送炭的功能了就像现在的手机几乎没有人能接受黑白屏一样，当初彩屏手机可是作为一大卖点来宣传。</p><p>下一节—分析需求的商业价值。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;需求分析：从用户提出的需求出发，找到用户内心真正的渴望，再转化为产品需求的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;听到过一个说法，说需求分析与常见的技术分析最大的不同是思路本质的差异。技术分析是树干到树枝到树叶的任务分解过程，技术人员很适应并乐于用这种方式思考，可以把大问题分解成小问题，并且发现难点，注意攻克。不少需求人员都是做技术出身的，所以开始往往会用这种思路做需求，听到客户提出的功能点，直接想怎么做系统设计了。这导致有的时候需求分析甚至已经越俎代庖到详细设计的职责了，大多数人在生活中也习惯用这样的方法来对待问题。&lt;/p&gt;
&lt;p&gt;而真实的情况是，需求分析是首先树叶到树枝到枝干，其次是树干到树枝到树叶的分析过程。所以说，完整的需求分析是一个分总分的过程，一方面不能漏掉提炼用户需求的这个过程，目的是透过现象看本质，另一方面也不能停在本质上。试想，如果做到树干就结束，后端的执行人员可能还是不知道要做什么东西。所以我们还要继续把树干再重新分解成树枝树叶。伟大的需求分析师可以无视用户想要的东西，去探究他内心真正的渴望，再给出更好的解决方案或者说是用户真正需要的东西。&lt;/p&gt;
&lt;p&gt;需求来源于理想与现实的差距，那么减小这个差距就有三种方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;改变现状是我们最常用的，去开发某种产品，但也是最笨的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;降低理想，不要忽视精神的力量，什么打预防针，丑话说在前头啊这类的句子，想必大家都经常听到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转移需求，因为人类的注意力是有限的，所以引导用户去关注其他事物，他就会觉得这个差距没那么可憎了。我们也可以说，人的行为是需求驱动的，想改变人的行为，可以寻找更强烈的需求展现给他，而让他不再纠结于原来的需求。短期利益：直接做用户要我们做的就得了。我们的产品通常都是希望用户长期使用，并且后续的服务也是我们来做，长期利益，不是一锤子买卖。即满足用户的需求不一定要做新产品或者新功能，而是更应该想想是否有四两拨千斤的妙招。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们能不能再开阔一点儿，不劳用户的大驾，直接达到产品设计的最高境界—&lt;strong&gt;创造需求&lt;/strong&gt;。&lt;br&gt;
创造需求工作中典型的场景就是老板或者产品人员的突发奇想，这些灵感在潜意识里都有一定的依据。是基于对用户，市场，产品的充分理解。需求分析的过程其实也有创造需求的成分。当一个新人真的能力不足的时候，不妨先做用户提出的需求，而不要自己去胡乱分析用户的需求。而对于一个团队来说，要尽量避免只有能力不足的需求分析人员这种情况出现。&lt;/p&gt;
&lt;p&gt;所以接下来我们老老实实的开始给需求做一次DNA检测，给需求做一次DNA检测。&lt;br&gt;
我们&lt;strong&gt;首先把用户需求转化为产品需求&lt;/strong&gt;，然后一步步确定每个产品需求的基本属性，商业价值，实现难度，性价比等需求分析。（需求转化到确定基本属性，到分析商业价值到初评实现难度，最后计算性价比。）特别提一下这里确定的是产品需求的各种属性，不同于之前提到的单项需求卡片里描述的用户需求的各种属性。&lt;/p&gt;
&lt;p&gt;检测的第一步就是需求转化。&lt;br&gt;
现在我们有很多用户需求可能记录在单项需求卡片里，可能记录在EXCEL里，可能是用WORD随意写的几句话，也可能只是一张思维导图。值得一提的是，用户需求与产品需求是多对多的关系。我们可能用多个功能来满足一个用户的需求，也可能用一个功能来满足多个用户的需求，甚至是用几个产品需求来满足几个用户需求，其中并没有一一对应的关系。&lt;/p&gt;
&lt;p&gt;对任何产品来说，只要需求采集的功夫做足了你就会发现产品需求列表行数超多，所以在需求转化过程中我们也会做一轮筛选，把明显不靠谱的用户需求直接过滤掉，不计入上述列表，是否明显不靠谱那就由你来把握了。不要把没资源做、短期内技术有难点的用户需求给猎杀了。&lt;/p&gt;
&lt;p&gt;需求种类知多少？需求的提出者需要自己辨别一下这个需求的种类，为后续的商业价值判断提供一些辅助信息。&lt;br&gt;
需求分类可以分为新增功能、功能改进、体验提升、BUG修复、内部需求等。其实产品需求远非我们直接可以想到的，还包括了很多非功能的需求，比如性能、可培训、可维护、可扩展。有很多需求不是为终端用户做的，而是为销售服务，测试团队的同学做的。举几个例子论坛需要支持1000人同时在线这是一个性能需求；系统功能升级必须在发布两周以前完成对客服部门的培训，这是一个培训需求；用户操作日志需要记录，这是一个内部数据分析的需求。通常来说，产品功能需求加产品非功能需求等于产品需求，而产品需求，加市场需求，加开发需求，加测试需求，加服务需求等于产品包需求。对这些概念感兴趣同学可以去查阅需求管理的相关资料层次。&lt;/p&gt;</summary>
    
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>一个需求的奋斗史--需求采集</title>
    <link href="https://verasince1997.github.io/2024/09/16/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E9%87%87%E9%9B%86%20/"/>
    <id>https://verasince1997.github.io/2024/09/16/%E4%BA%BA%E4%BA%BA%E9%83%BD%E6%98%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2--%E9%9C%80%E6%B1%82%E9%87%87%E9%9B%86%20/</id>
    <published>2024-09-16T00:06:30.048Z</published>
    <updated>2024-09-18T02:48:48.001Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>需求采集，人人有责。</p></blockquote><p>讨论需求采集方法。</p><p>直接从用户那里得到需求，我们称之为<strong>一手需求</strong>，就像生孩子。一手需求与二手需求。有个很形象的比喻就是生孩子与养孩子。话糙理不糙，首先把生孩子需求采集视为己任，人人有责，希望所有人都参与，都来生孩子，然后我们帮大家养，这就需要给他们一个简单的生孩子的工具----单项需求卡片。</p><p>很多时候我们还会接受<strong>二手需求</strong>，比如老板说要给用户做一个某功能，销售人员说用户哪里用起来不顺当。这些需求和一手需求比起来，就像养孩子，生孩子更多时候发生于新产品诞生前，这个时候外部没有用户，内部没有运营，销售服务等。所以对于需求而言，更多的是产品人员驱动，去主动采集需求，比较常见的就是直接去潜在的目标用户那里采集。这个从无到有的过程，发挥的空间最大，很有成就感。养孩子通常是产品已经运行了一段时间以后，用户也有了，公司内部也多了很多相关的人员，比如销售和服务。虽然产品部门与用户的直接接触变少，但多了很多的间接来源，基于终端用户接触的干系人，他们会向你反馈很多的需求，而用户也开始主动提出需求了。</p><p>对比一下，生孩子的时候，我们主动去拉需求的比例较高，需求都是直接从用户那里得到的，有点儿进攻的感觉。而孩子生出来以后，就不再是你一个人的孩子了，必然是大家一起养，所以我们需要照顾的各方面也会更多。我们会收到很多推过来的需求，比较像防守的感觉。</p><p>有很多同学从一开始工作，接触的就是已经存在的老产品，需求始终堆积如山，如果碰上销售强势的产品，那更是连响应销售提过来的需求都来不及。也许做了半年，一年，突然回想，发现自己连真正的用户都从来没接触过，而是始终在满足销售的需求。产品部门应该坚持不断地从终端用户那里直接获得需求，才能保证产品的可持续发展。但二手需求毕竟是常态，我们经常接到的就是口头上那几句话或者一封邮件的几行说明，这中间理解的偏差只能靠我们主动的、反复的沟通来弥补。那么有没有什么办法解决呢？下面介绍一种简单的二手需求采集工具，单向需求卡片。</p><p>单项需求卡片的理念就是，产品的需求工作不只是需求分析人员的事儿，而是涉及产品的每个干系人的义务，至少得参与采集的过程。理想的状态是，产品所有的干系人都参加过需求采集的培训，然后日常工作中养成主动提交需求给产品人员的习惯。作为专业的需求分析人员，应该降低同事们比如销售服务，技术人员提交需求的成本，也是节省我们自己的时间，尽可能多的采集需求。采集并不是产品设计之前的工作，而是一个贯穿始终的过程，它并不是产品人员的事情，而是所有人的责任。</p><p>最后再简单分享几个有特点的需求采集方法，希望大家能灵活应用，尽可能多的采集。<span id="more"></span></p><p><code>现场采集</code></p><p>现场调查说简单一点儿，就是打入敌人内部，和客户一起工作一段时间，深入了解需求。它是一种典型的定性分析，持续时间长，从几小时到几个月，既能听到用户怎么说，也能看到用户怎么做。不过受众面极其狭窄，一次只能有一个，要特别小心被非典型的用户带到沟里去。</p><p><code>AB测试</code></p><p>AB测试基于大用户量比较合适。比如有一个按钮不知道是放页面的左边好还是右边好，而我们有10万用户，那就先随机挑选少量的用户发布这个按钮。1000人放左边，另外1000人放右边，然后过段时间分析结果，再决定剩下的98%用户该怎么办。很明显，这也是让用户直接参与了设计。</p><p><code>卡片分类法</code></p><p>我们把产品各种需求写在便利贴上，让用户一起讨论并完成分类，这能让你深入了解用户是怎么给产品划分模块儿的。<br>用户认为这个网站应该是什么结构，因为<strong>产品设计人员的思维和用户的思维通常不一样</strong>，这也就导致了如果是产品设计师来单方面决定网站结构的话很可能会导致用户理解的困难。所以卡片分类法能让最终的产品更加符合用户的心理模型。自己提需求，这是最简单的方法，每一个靠谱的产品都会有一群粉丝，用户不用你去找他们采集需求，他们也会给我们惊喜，主动提出很多需求。作为产品的主人，我们还好意思没有用户了解产品吗？产品要用才能感觉出好坏，特别是自己做的产品。产品做多了我们随便看看别人做的产品，总能一下子挑出很多问题，提出很多需求。</p><p>需求采集的各种新方法层出不穷，和学习任何领域的知识一样，建议大家在了解知识框架后，坚持需求驱动学习，<strong>听用户的，但不要照着做</strong>。采集了很多需求，但是一团乱麻，从哪里着手呢？用户都帮我们想好怎么做了，照他说的做吗？下一节----需求分析。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;需求采集，人人有责。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;讨论需求采集方法。&lt;/p&gt;
&lt;p&gt;直接从用户那里得到需求，我们称之为&lt;strong&gt;一手需求&lt;/strong&gt;，就像生孩子。一手需求与二手需求。有个很形象的比喻就是生孩子与养孩子。话糙理不糙，首先把生孩子需求采集视为己任，人人有责，希望所有人都参与，都来生孩子，然后我们帮大家养，这就需要给他们一个简单的生孩子的工具----单项需求卡片。&lt;/p&gt;
&lt;p&gt;很多时候我们还会接受&lt;strong&gt;二手需求&lt;/strong&gt;，比如老板说要给用户做一个某功能，销售人员说用户哪里用起来不顺当。这些需求和一手需求比起来，就像养孩子，生孩子更多时候发生于新产品诞生前，这个时候外部没有用户，内部没有运营，销售服务等。所以对于需求而言，更多的是产品人员驱动，去主动采集需求，比较常见的就是直接去潜在的目标用户那里采集。这个从无到有的过程，发挥的空间最大，很有成就感。养孩子通常是产品已经运行了一段时间以后，用户也有了，公司内部也多了很多相关的人员，比如销售和服务。虽然产品部门与用户的直接接触变少，但多了很多的间接来源，基于终端用户接触的干系人，他们会向你反馈很多的需求，而用户也开始主动提出需求了。&lt;/p&gt;
&lt;p&gt;对比一下，生孩子的时候，我们主动去拉需求的比例较高，需求都是直接从用户那里得到的，有点儿进攻的感觉。而孩子生出来以后，就不再是你一个人的孩子了，必然是大家一起养，所以我们需要照顾的各方面也会更多。我们会收到很多推过来的需求，比较像防守的感觉。&lt;/p&gt;
&lt;p&gt;有很多同学从一开始工作，接触的就是已经存在的老产品，需求始终堆积如山，如果碰上销售强势的产品，那更是连响应销售提过来的需求都来不及。也许做了半年，一年，突然回想，发现自己连真正的用户都从来没接触过，而是始终在满足销售的需求。产品部门应该坚持不断地从终端用户那里直接获得需求，才能保证产品的可持续发展。但二手需求毕竟是常态，我们经常接到的就是口头上那几句话或者一封邮件的几行说明，这中间理解的偏差只能靠我们主动的、反复的沟通来弥补。那么有没有什么办法解决呢？下面介绍一种简单的二手需求采集工具，单向需求卡片。&lt;/p&gt;
&lt;p&gt;单项需求卡片的理念就是，产品的需求工作不只是需求分析人员的事儿，而是涉及产品的每个干系人的义务，至少得参与采集的过程。理想的状态是，产品所有的干系人都参加过需求采集的培训，然后日常工作中养成主动提交需求给产品人员的习惯。作为专业的需求分析人员，应该降低同事们比如销售服务，技术人员提交需求的成本，也是节省我们自己的时间，尽可能多的采集需求。采集并不是产品设计之前的工作，而是一个贯穿始终的过程，它并不是产品人员的事情，而是所有人的责任。&lt;/p&gt;
&lt;p&gt;最后再简单分享几个有特点的需求采集方法，希望大家能灵活应用，尽可能多的采集。&lt;/p&gt;</summary>
    
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="产品设计" scheme="https://verasince1997.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>道德经从入门到精通05</title>
    <link href="https://verasince1997.github.io/2024/09/16/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A05/"/>
    <id>https://verasince1997.github.io/2024/09/16/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A05/</id>
    <published>2024-09-15T23:47:57.695Z</published>
    <updated>2024-09-19T14:19:38.464Z</updated>
    
    <content type="html"><![CDATA[<p>《道经帛书版》48章04</p><blockquote><p>道盅，而用之又弗盈也。渊呵，似万物之宗。</p><p>挫其锐，解其纷，和其光，同其尘。湛呵，似或存。吾不知其谁之子也，象帝之先。</p></blockquote><p><code>道盅，而用之又弗盈也。渊呵，似万物之宗。</code></p><p>“道沖，而用之又弗盈也”，其中的“沖”跟“冲”意思差不多，是水涌动上来的一种感觉。还有一种讲法是，“沖”跟“盅”通假，也就是说道就像酒盅一样（“盅”不一定指酒盅，而是泛指中空的器皿）。道总保持一种中空的状态，然后化生万物出来；虽然它化生万物出来，却永远保持空的状态。所以“用之又弗盈也”，总是不充盈。这是老子所讲的天之道的一个特点：中间是空的，总保持虚空的状态。这是这个世界的秘密，道的秘密。了解这个秘密对我们有什么好处呢？我们的人生也可以像这样什么都不想，一直往前走。但是也可以想想，有什么秘密，有什么规则；我们怎么做，能够更顺利一些。老子告诉我们，做事如果能够模仿天之道，使自己保持在这种虚空的状态下，更容易创造，更容易接纳。这是我们人生的一个大智慧：谁能够经常保持虚空、中空的状态，谁就能进步。</p><p>渊是深渊的渊，什么意思呢，就是一个道啊，它深邃、深远，像这个万物的缘起一样，像万物的起源一样，说万物的之宗啊。</p><p><code>湛呵，似或存。吾不知其谁之子也，象帝之先。</code></p><p>湛呵，似或存。湛是湛蓝色的。湛也是深远的意思，好像是存在是什么意思？就是说道一开始无名无形，你说它没有吧，它还有。你说它有吧，哎，无名无形，所以这个是道啊，好像一开始是模糊的，难以去揣摩的。</p><p>老子接着说，吾不知谁之子，老子说，创造我们世界源头的这个力量，我不知道是谁创造了它，我不知道他是谁的儿子，所以老子在这儿承认我们认识的局限性。也就是说，老子认为我能够猜测分析到的就在道这儿了。前边儿的谁创造了道，不知道，那么谁是他的母亲，搞不清楚。</p><p>“象帝之先。”一般把“象”解释为好像的意思。有一种说法是这样的：好像是我们现在认为的天地的祖先，生出来了现在的天地。“象”在古代最早是指“呈现出的形态”。“象帝”就是上天，道是我们这个世界主宰者出现之前的力量。老子在告诉我们，道所体现的规律是排在前边儿的，我们所看到这些所能体现出来的神仙，这种我们认为的这个世界的主宰其实是按照这个规律生出来的，它很有可能只是这个规律的监督者。老子的观点是，你只要尊重了道的这个规律，这个法则，这个世界运行的这个密码，那么我们这个世界所谓的天地鬼神。它就来加持你，因为它是这个规律的执行者和监督者。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《道经帛书版》48章04&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;道盅，而用之又弗盈也。渊呵，似万物之宗。&lt;/p&gt;
&lt;p&gt;挫其锐，解其纷，和其光，同其尘。湛呵，似或存。吾不知其谁之子也，象帝之先。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;道盅，而用之又弗盈也。</summary>
      
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="道德经" scheme="https://verasince1997.github.io/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>道德经从入门到精通04</title>
    <link href="https://verasince1997.github.io/2024/09/09/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A04/"/>
    <id>https://verasince1997.github.io/2024/09/09/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A04/</id>
    <published>2024-09-09T15:10:41.416Z</published>
    <updated>2024-09-16T00:05:55.245Z</updated>
    
    <content type="html"><![CDATA[<p>《道经帛书版》47章03</p><blockquote><p>不上贤，使民不争。不贵难得之货，使民不为盗。不见(xiàn)可欲，使民不乱。</p><p>是以圣人之治也，虚其心，实其腹，弱其志，强其骨。恒使民无知无欲也，使夫智不敢。弗为而已，则无不治矣。</p></blockquote><p><code>不上贤，使民不争。不贵难得之货，使民不为盗。不见(xiàn)可欲，使民不乱。</code></p><p>不拔高贤人的地位，使民众不互相争斗。不看重难得的财货，使民众不偷不盗。不展现容易诱发欲望的东西，使民众不作乱。</p><p><code>是以圣人之治也，虚其心，实其腹，弱其志，强其骨。</code></p><p>心和眼睛代表的都是欲望，欲望永远是无穷的。腹代表生活所需的根本的东西，肚子吃饱了就不会有更多的欲望了。你喜欢吃牛肉，这一顿给你一吨，你吃完一碗就肚子胀了不想吃了，但钱给你再多你都能接受。</p><p>“志”就是心的方向，心里向往的方向。骨”是撑起生命的骨干性的东西，就是生活最基本的条件，让你强壮，让你充实。那么，在这种情况下，生活条件都满足了，你的欲望才可能慢慢消减下来。“弱其志，强其骨”跟“虚其心，实其腹”是一样的，就是降低大家的欲望，然后使最基本的生活需要得到满足。怎么才能做到这点呢？领导者通过把自己的欲望放低，感化被领导者，被领导者就会把欲望放低，去把该做的事做好。</p><p>身体变热有两种可能：一种可能是外邪来了，身体开始越来越热，发烧、咽喉红肿，这个热是多余的。比如，阴阳原来各有一百份，这时候外邪来了，使阳多出五十份邪热来，阴却不变，就显得热多余了。这时候中医的方法是清热，要减去五十份的阳。另外一种情况是，阴阳都是一百份，阴虚了，变成五十份了；阳跟阴比就多出来五十份。因为阴不足以配阳了，这个多出来的阳就会变成多余的热，就相对显得热了。这时候中医的方法是滋阴，要补五十份的阴。补上以后，人就不会显出偏寒或者偏热了。阴好比是老子讲的物质基础，吃饱饭，有房子住，有衣服穿等等；阳相当于人的欲望。老子一方面滋阴，把物质基础补足；另一方面又清热，去掉欲望——这在中医里叫滋阴清热。所以老子是讲让你物质基础变得富足，然后才能去掉欲望。甘其食，美其服，乐其俗，安其居；有房子住、有饱饭吃、有东西用、有衣服穿等等这些可称作阴。阳相当于人的欲望，老子一方面儿滋阴，把物质基础补足。另外一方面又给你去掉欲望清热。<span id="more"></span></p><p><code>恒使民无知无欲也，使夫智不敢。弗为而已，则无不治矣。</code></p><p>使民无知无欲也。老子的言外之音是让老百姓的物质丰盛，然后通过这种方式去掉欲望，那么下一句是夫知者不敢扶为而已。是让领导者你自己去做到，然后用你的行为去影响百姓，让他们不会忤逆，违逆你的这种状态，而是跟你达到一致的状态。这样则无不治也。</p><p>“勇”字在古代有两种写法：一种是“勇”；还有一种是“恿”，指气在体内流通的管道。我们的气在体内走，体内的气充足了以后，这个人就会有力气，这种状态叫“勇”。所以“勇”是形体的丰盛，就是气足了，人就有劲。</p><p>“敢”是在低的位置去触动高的位置，也就是说，叫以卑犯上什么呢，就是地位低的人，有勇气去动高的人，敢是一种胆量。</p><p>领导者难道要用强力压制，吓唬那些为了获取虚名，为了满足自己的欲望使用各种奇技淫巧的人不敢这样做吗？难道是用武力让民没有胆量去逆着意愿吗？领导者清空自己，不上贤，不标榜自己多么高明，不贵难得之货，抬高它的价格，不表现出自己的欲望。把自己欲望放下，生活平淡，然后认真地踏踏实实的去做自己该做的事儿，你带领的员工也一定会这样的。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;《道经帛书版》47章03&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不上贤，使民不争。不贵难得之货，使民不为盗。不见(xiàn)可欲，使民不乱。&lt;/p&gt;
&lt;p&gt;是以圣人之治也，虚其心，实其腹，弱其志，强其骨。恒使民无知无欲也，使夫智不敢。弗为而已，则无不治矣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;不上贤，使民不争。不贵难得之货，使民不为盗。不见(xiàn)可欲，使民不乱。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不拔高贤人的地位，使民众不互相争斗。不看重难得的财货，使民众不偷不盗。不展现容易诱发欲望的东西，使民众不作乱。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;是以圣人之治也，虚其心，实其腹，弱其志，强其骨。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;心和眼睛代表的都是欲望，欲望永远是无穷的。腹代表生活所需的根本的东西，肚子吃饱了就不会有更多的欲望了。你喜欢吃牛肉，这一顿给你一吨，你吃完一碗就肚子胀了不想吃了，但钱给你再多你都能接受。&lt;/p&gt;
&lt;p&gt;“志”就是心的方向，心里向往的方向。骨”是撑起生命的骨干性的东西，就是生活最基本的条件，让你强壮，让你充实。那么，在这种情况下，生活条件都满足了，你的欲望才可能慢慢消减下来。“弱其志，强其骨”跟“虚其心，实其腹”是一样的，就是降低大家的欲望，然后使最基本的生活需要得到满足。怎么才能做到这点呢？领导者通过把自己的欲望放低，感化被领导者，被领导者就会把欲望放低，去把该做的事做好。&lt;/p&gt;
&lt;p&gt;身体变热有两种可能：一种可能是外邪来了，身体开始越来越热，发烧、咽喉红肿，这个热是多余的。比如，阴阳原来各有一百份，这时候外邪来了，使阳多出五十份邪热来，阴却不变，就显得热多余了。这时候中医的方法是清热，要减去五十份的阳。另外一种情况是，阴阳都是一百份，阴虚了，变成五十份了；阳跟阴比就多出来五十份。因为阴不足以配阳了，这个多出来的阳就会变成多余的热，就相对显得热了。这时候中医的方法是滋阴，要补五十份的阴。补上以后，人就不会显出偏寒或者偏热了。阴好比是老子讲的物质基础，吃饱饭，有房子住，有衣服穿等等；阳相当于人的欲望。老子一方面滋阴，把物质基础补足；另一方面又清热，去掉欲望——这在中医里叫滋阴清热。所以老子是讲让你物质基础变得富足，然后才能去掉欲望。甘其食，美其服，乐其俗，安其居；有房子住、有饱饭吃、有东西用、有衣服穿等等这些可称作阴。阳相当于人的欲望，老子一方面儿滋阴，把物质基础补足。另外一方面又给你去掉欲望清热。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="道德经" scheme="https://verasince1997.github.io/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>道德经从入门到精通03</title>
    <link href="https://verasince1997.github.io/2024/09/07/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A03/"/>
    <id>https://verasince1997.github.io/2024/09/07/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A03/</id>
    <published>2024-09-07T09:35:33.914Z</published>
    <updated>2024-09-09T15:08:31.661Z</updated>
    
    <content type="html"><![CDATA[<p>《道经帛书版》46章02</p><blockquote><p>天下皆知美、为美，恶已。皆知善，訾(zǐ)不善矣。</p><p>有，无之相生也。难，易之相成也。长，短之相形也。高，下之相盈也。音，声之相和也。先，后之相随，恒也。</p><p>是以圣人居无为之事，行不言之教。万物作而弗始也，为而弗持也，成功而弗居也。夫唯弗居，是以弗去。</p></blockquote><p><code>天下皆知美、为美，恶已。皆知善，訾(zǐ)不善矣。</code></p><p>大家都说一个事物是美的，真的美吗？美不是固定的一个标准。胖美吗？骨感美吗？蛾眉美吗？而且说美，那不美出现了。随着时间不同，它会变化，有的时候呢，美好和丑恶还会互相转化，天下都说的美好，明天可能就不美好。古人最有名的一个例子，塞翁失马，旋转不停变换，玄啊。</p><p>天下所有人都认为就这事铁定就是善的时候，这事本身可能就不是善的。今天认为是好的，明天可能就不认为好了，今天认为是对的，明天可能就认为错了。那么这是什么呢？就是名可名也，非恒名也。我们但凡给它固定下来的标签儿，形名符号都是人为加上去的，带着我们的标准，角度一换，全部都换掉。固定的标签不可能是恒定的，领导者不要推行单一标准。</p><p><code>有，无之相生也。难，易之相成也。</code></p><p>有生无，无生有。有和无是互相生的。有有才有无，有无才有有。没有无哪儿来的有啊，比如说这块地完全空白，种上树才能变成有。如果它已经是有，树都种满了，你还种什么树啊。有也会生无，我们眼见着多少有东西，当它如此盛大的时候，觉得它会永恒的存在，可是转眼之间它就消失了。</p><p>当你身体什么问题都没有的时候，你感觉到健康了吗？没感觉到对吧，因为你运行正常，都不会想到身体哪个部分有问题，这是大家都是有的状态，你也显不出来有。什么时候发现自己有健康？到医院去看看，那里边儿做手术的，各种切除的，这个胃不好了，切掉多少，肺坏了，切掉多少。当你看到这些人的时候，会突然意识到自己有什么，也就是有是当看到无的时候才显现出。</p><p>难和易也相互转变，当量变到质变时，易就会转为难。所以老子告诉大家不要执着于获得名相，这些名相是在一定程度下一定条件下出现的。条件一变，这个标签就变了。无和有之间是再来回互相生的。我们人生只不过是要在有和无之间寻找平衡，在有的时候要有意的无，以获得有；有时候要有意的去有，然后进入无的状态，自己要学会做减法。</p><p>比如有人在家找工作，没有生活来源，是无的状态。正因为无，所以有时间不断的在家写，写东西，在哪儿找出版社呢？这是儿简直难于上青天。每天写5000字，一下写了上百万字，写完了以后，大家看到以后觉得有收益，所以书出版了，看的人越来越多，出版社自己开始来找，甚至大家都争起来了。这个时候联系出版社反而变得非常容易。大家请他不断地去跟大家做辅导，生活变得有益起来，这时候生活就有了。当有了以后，你觉得真的全都有了吗？又会变化，因为太忙了，每天要不断的写东西，要给大家去做讲座、讲课、开各种会，那么慢慢变得没有时间去陪伴家人，陪父母的时间就变得非常少了，丧失自己的私人生活空间，又变成无了。<span id="more"></span></p><p>​<code>长，短之相形也。高，下之相盈也。音，声之相和也。先，后之相随，恒也。</code></p><p>长短、高下是相对比较出现的。条件一变，参照物一变，评价就变了。</p><p>音、声、乐所描述的东西不同。音是指单个的声响；声是几个音组成在一起，有高低的时候才叫声，音是单个音节的声，声是组合起来的音；乐指把这个声再合起来的音符。<br>音声之相合，什么意思呢？每一个事物都是因为其他事物的支撑而存在的，你不可能独立存在。比如说高下有了高才显出这个下，有了这个下，你才显得这高。如果没有参照物，您说何谈高呢，您说这些楼立在那儿，这楼高还是低啊？没法评价，因为没有参照物，拿自己来比这楼是高的，拿泰山比，这楼是低的。所以两者是相成的。先，后之相随，恒也。有比较才有先后。先和后总是相比较出现的，这种状态是永恒的，</p><p>老子讲的有无、难易、长短，高下、先后，都是一个是另外一个的参照物，那么怎么会有一个铁定不变的标准呢？</p><p>​<code>是以圣人居无为之事，行不言之教。万物作而弗始也，为而弗持也，成功而弗居也。夫唯弗居，是以弗去。</code></p><p>无为是道德经的核心，无为被历朝历代解得模糊不堪，各家有各家讲法，到底谁对谁错？我们去掉形名之分。不要说谁对谁错，只要能够启发到其他人了，那么这个就是有意义的。</p><p>如果无为而治是尽量不去干预它，让它自己去运行。这种说法你接受吗？我不接受。那么无为到底什么意思？解开道德经的钥匙在哪儿？老子道德经里面的核心是效仿天之道来去制定圣人之道。</p><p>春夏万物树木繁茂，秋冬树叶凋落，春天又开始发芽。天地万物生养得这么好，但是道不说这是自己的功劳，不视以为功，它隐身于背后，我们看不到这个道在哪儿，道隐身于背后，无言无形，让万物去运作。成功而弗居也，万物已经长好繁茂了，但它不居功自傲，不恃以为功，不居功自傲，抬高自己位置。正因为它不居功自傲，它放低自己，隐形于背后，为大家去做事儿，结果大家反而离不开它。</p><p>无为是一个领导者不要为自己的名誉、地位和金钱去刻意作为，无为是放下自己的欲望，清空自己，尽量不要有名利之心，忘掉形名之分，但要对众生有为。<br>行</p><p>不言之教是什么意思？天之道让大地万物运作，但没有指指点点，它只制定规则，然后万物按照规则去运作。不符合规则就惩罚，比冬天开花了，它惩罚让你枯萎，不去过分干预。</p><p>老子原来是讲天之道，天之道为万物作为，它生养万物，万物作而弗始也，它从一开始就努力把自己掩藏的背后，你都不知道它什么时候开始的。居是放到什么位置，它不把自己认为是主宰，所以大家离不开它。放下自己为大家做事儿，不要想回报，反而最后会更幸福。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;《道经帛书版》46章02&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天下皆知美、为美，恶已。皆知善，訾(zǐ)不善矣。&lt;/p&gt;
&lt;p&gt;有，无之相生也。难，易之相成也。长，短之相形也。高，下之相盈也。音，声之相和也。先，后之相随，恒也。&lt;/p&gt;
&lt;p&gt;是以圣人居无为之事，行不言之教。万物作而弗始也，为而弗持也，成功而弗居也。夫唯弗居，是以弗去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;天下皆知美、为美，恶已。皆知善，訾(zǐ)不善矣。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;大家都说一个事物是美的，真的美吗？美不是固定的一个标准。胖美吗？骨感美吗？蛾眉美吗？而且说美，那不美出现了。随着时间不同，它会变化，有的时候呢，美好和丑恶还会互相转化，天下都说的美好，明天可能就不美好。古人最有名的一个例子，塞翁失马，旋转不停变换，玄啊。&lt;/p&gt;
&lt;p&gt;天下所有人都认为就这事铁定就是善的时候，这事本身可能就不是善的。今天认为是好的，明天可能就不认为好了，今天认为是对的，明天可能就认为错了。那么这是什么呢？就是名可名也，非恒名也。我们但凡给它固定下来的标签儿，形名符号都是人为加上去的，带着我们的标准，角度一换，全部都换掉。固定的标签不可能是恒定的，领导者不要推行单一标准。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;有，无之相生也。难，易之相成也。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有生无，无生有。有和无是互相生的。有有才有无，有无才有有。没有无哪儿来的有啊，比如说这块地完全空白，种上树才能变成有。如果它已经是有，树都种满了，你还种什么树啊。有也会生无，我们眼见着多少有东西，当它如此盛大的时候，觉得它会永恒的存在，可是转眼之间它就消失了。&lt;/p&gt;
&lt;p&gt;当你身体什么问题都没有的时候，你感觉到健康了吗？没感觉到对吧，因为你运行正常，都不会想到身体哪个部分有问题，这是大家都是有的状态，你也显不出来有。什么时候发现自己有健康？到医院去看看，那里边儿做手术的，各种切除的，这个胃不好了，切掉多少，肺坏了，切掉多少。当你看到这些人的时候，会突然意识到自己有什么，也就是有是当看到无的时候才显现出。&lt;/p&gt;
&lt;p&gt;难和易也相互转变，当量变到质变时，易就会转为难。所以老子告诉大家不要执着于获得名相，这些名相是在一定程度下一定条件下出现的。条件一变，这个标签就变了。无和有之间是再来回互相生的。我们人生只不过是要在有和无之间寻找平衡，在有的时候要有意的无，以获得有；有时候要有意的去有，然后进入无的状态，自己要学会做减法。&lt;/p&gt;
&lt;p&gt;比如有人在家找工作，没有生活来源，是无的状态。正因为无，所以有时间不断的在家写，写东西，在哪儿找出版社呢？这是儿简直难于上青天。每天写5000字，一下写了上百万字，写完了以后，大家看到以后觉得有收益，所以书出版了，看的人越来越多，出版社自己开始来找，甚至大家都争起来了。这个时候联系出版社反而变得非常容易。大家请他不断地去跟大家做辅导，生活变得有益起来，这时候生活就有了。当有了以后，你觉得真的全都有了吗？又会变化，因为太忙了，每天要不断的写东西，要给大家去做讲座、讲课、开各种会，那么慢慢变得没有时间去陪伴家人，陪父母的时间就变得非常少了，丧失自己的私人生活空间，又变成无了。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="道德经" scheme="https://verasince1997.github.io/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>道德经从入门到精通02</title>
    <link href="https://verasince1997.github.io/2024/09/03/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A02/"/>
    <id>https://verasince1997.github.io/2024/09/03/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A02/</id>
    <published>2024-09-03T14:33:45.127Z</published>
    <updated>2024-09-16T00:06:45.090Z</updated>
    
    <content type="html"><![CDATA[<p>《道经帛书版》45章01</p><blockquote><p>道可道也，非恒道也。名可名也，非恒名也。</p><p>无名，万物之始也。有名，万物之母也。</p><p>故恒无欲也，以观其妙；恒有欲也，以观其所徼(jiào)。</p><p>两者同出，异名同谓，玄之又玄，众妙之门。</p></blockquote><p><code>“道可道也，名可名也”</code></p><p>第二个道、第二个名，是名词动用。道，道路，用来走的，可以遵照执行的。（不是用来说的，对第一句通常的解释—能够讲出来的道不是恒长的道。我的理解是可以遵照执行的道，不是恒长的道。）<br><code>“非恒道也”</code></p><p>避讳汉文帝刘恒，恒改为长。<br>经只是一种形式，不要执迷于形式。将佛法比喻成竹筏，用竹筏过河后不需要再带着竹筏，不着相。你明白了道理后去奉行，不用背着竹筏了。拿一个法则，当作金科玉律，比如一天喝八杯水，冬天和夏天一样吗，冬天出汗又没夏天多，再者老人小孩一样吗？</p><p><code>“名可名也，非恒名也”。</code></p><p>第一个名，万物都有具体的称谓。现在我正在打字的电脑，十年前构造它笔记本外层、显示屏框架、键盘、笔记本底座的工程塑料、铝/镁/镁锂合金、碳纤维复合材料还在荒山野岭中待提炼，几百年后它又化成各种金属，它是变化着的，名不能涵盖它永恒的属性。手机有摄像功能、录音功能、笔记功能，在手机上加上智能二字，也涵盖不了所有特征。命名穷尽不了事物的本质。抱怨招不到合格的员工，天生就有合格的员工吗？十全十美的人早就找到其他岗位。固执于形名。其实任何一个人，只要这人不是大恶之人，到单位来，给他一点点儿培养都会培养成才、都会让他得到发展，得到成长。最后这人一定会胜任工作。</p><p><code>无名，万物之始也。有名，万物之母也。</code></p><p>科学家认为宇宙是137亿年前产生的，宇代表上下方位。光绕地球一圈是0.13秒，但要走到宇宙尽头需要120亿年。<br>始，女子怀胎，生命刚开始孕育的时候，谓之始。孩子生下来，长大长高、有思想。老子是无神论，主张万物之前是无。</p><p><code>故恒无欲也，以观其妙；恒有欲也，以观其所徼(jiào)。</code></p><p>直觉（放空、跳出来看），+理性（通过自己的理智、条件分析事物运行的规律），两种同时发力，一个是放下欲望（致虚极，在安静的状态下获得灵感。），一个是带着自己的欲望和观点，绝对是一种智慧，不带主观判断不先入为主，两个小孩儿打架。两个部门有矛盾，主管一方面公平客观看待两个部门的冲突；一方面能有心思、保持自己的欲望，带着自己的思想和意识，确定出两方各自的小99，什么导致冲突。一个部门是我带起来的，亲手培养起来的，我作为领导者，如何更好处理这件冲突。</p><span id="more"></span><p><code>两者同出，异名同谓，玄之又玄，众妙之门。</code></p><p>两者：（有、无）<br>玄：偏红偏紫的颜色。微妙的状态，人体的DNA，万物的最终状态，螺旋的形状。<br>众妙之门：只是一种门径，形。女少为妙，美好的。</p><p>道德经第一章讲的是什么呢？是道与世界的关系，它上来就立了一个特别有意思的一个观点----世界生成啊，不是像我们想象的由神来造的。老子认为这之前有个力量，这个力量呢，形容不清楚，但能感知到它存在，这个力量呢参与了世界的生成，它是世界生成的源头。它的状态一开始无名无形，后来发展有万物以后是有名有形，推动万物的发展，那么我们要以两种状态去感知它，一种是放空自己的这种无欲的状态，一种是有欲的状态，用两种状态去感知它，会了解道怎么运行的，然后才能在这个世界中去建立人的法则。</p><p>第一章定下整个基调，世界观是什么样，认为道是什么，先给大家做了一个概述。接下来道德经的第二章进行天之道和圣人之道关系的评述。经典里一句简单的话，给你启发，做事儿带来变化，找事物的本质。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;《道经帛书版》45章01&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;道可道也，非恒道也。名可名也，非恒名也。&lt;/p&gt;
&lt;p&gt;无名，万物之始也。有名，万物之母也。&lt;/p&gt;
&lt;p&gt;故恒无欲也，以观其妙；恒有欲也，以观其所徼(jiào)。&lt;/p&gt;
&lt;p&gt;两者同出，异名同谓，玄之又玄，众妙之门。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;“道可道也，名可名也”&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第二个道、第二个名，是名词动用。道，道路，用来走的，可以遵照执行的。（不是用来说的，对第一句通常的解释—能够讲出来的道不是恒长的道。我的理解是可以遵照执行的道，不是恒长的道。）&lt;br&gt;
&lt;code&gt;“非恒道也”&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;避讳汉文帝刘恒，恒改为长。&lt;br&gt;
经只是一种形式，不要执迷于形式。将佛法比喻成竹筏，用竹筏过河后不需要再带着竹筏，不着相。你明白了道理后去奉行，不用背着竹筏了。拿一个法则，当作金科玉律，比如一天喝八杯水，冬天和夏天一样吗，冬天出汗又没夏天多，再者老人小孩一样吗？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;“名可名也，非恒名也”。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第一个名，万物都有具体的称谓。现在我正在打字的电脑，十年前构造它笔记本外层、显示屏框架、键盘、笔记本底座的工程塑料、铝/镁/镁锂合金、碳纤维复合材料还在荒山野岭中待提炼，几百年后它又化成各种金属，它是变化着的，名不能涵盖它永恒的属性。手机有摄像功能、录音功能、笔记功能，在手机上加上智能二字，也涵盖不了所有特征。命名穷尽不了事物的本质。抱怨招不到合格的员工，天生就有合格的员工吗？十全十美的人早就找到其他岗位。固执于形名。其实任何一个人，只要这人不是大恶之人，到单位来，给他一点点儿培养都会培养成才、都会让他得到发展，得到成长。最后这人一定会胜任工作。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;无名，万物之始也。有名，万物之母也。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;科学家认为宇宙是137亿年前产生的，宇代表上下方位。光绕地球一圈是0.13秒，但要走到宇宙尽头需要120亿年。&lt;br&gt;
始，女子怀胎，生命刚开始孕育的时候，谓之始。孩子生下来，长大长高、有思想。老子是无神论，主张万物之前是无。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;故恒无欲也，以观其妙；恒有欲也，以观其所徼(jiào)。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;直觉（放空、跳出来看），+理性（通过自己的理智、条件分析事物运行的规律），两种同时发力，一个是放下欲望（致虚极，在安静的状态下获得灵感。），一个是带着自己的欲望和观点，绝对是一种智慧，不带主观判断不先入为主，两个小孩儿打架。两个部门有矛盾，主管一方面公平客观看待两个部门的冲突；一方面能有心思、保持自己的欲望，带着自己的思想和意识，确定出两方各自的小99，什么导致冲突。一个部门是我带起来的，亲手培养起来的，我作为领导者，如何更好处理这件冲突。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="道德经" scheme="https://verasince1997.github.io/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>《一句顶一万句》书评</title>
    <link href="https://verasince1997.github.io/2024/08/31/%E4%BA%BA%E6%96%87/%E4%B8%80%E5%8F%A5%E9%A1%B6%E4%B8%80%E4%B8%87%E5%8F%A5/"/>
    <id>https://verasince1997.github.io/2024/08/31/%E4%BA%BA%E6%96%87/%E4%B8%80%E5%8F%A5%E9%A1%B6%E4%B8%80%E4%B8%87%E5%8F%A5/</id>
    <published>2024-08-31T14:13:25.408Z</published>
    <updated>2024-10-08T08:34:02.647Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是我为线下读书分享活动准备的稿子，传至个人博客上记录。</p></blockquote><p>刘震云的一个朋友，他的老婆出轨了，刘震云就对他的朋友说，一个女人出轨，那个男人一定是说了一句让她心动的话，这一句话顶过他朋友的一万句话，但是他们都不知道那句话是什么，为了找到那句话，就开始创作这本书。</p><p>主人公叫杨百顺，他的父亲是卖豆腐的老杨，赶着巴结不拿他当朋友的马家庄赶大车的老马，拿他当朋友的，想跟他多说一句话，老杨倒对他爱搭不理。老杨解释这样做的原因呢：”论起事来，同样一件事，我只能看一里，他能看十里，我只能看一个月，他一下能看十年“；又说：“以后遇到事，就想找他商量。”</p><p>其实听明白了，还是想占人便宜，遇事自个儿拿不定主意，想借人一双眼。自打认识老杨，老马给老杨出过不下一百个主意；老马从老杨那里，听到的却全是废话。那既然老马看不上老杨，为啥还跟他来往呢？因为方圆百里，哪儿还有一下看十里和看十年的人呢？老马也是一辈子没朋友。</p><p>老杨都找老马请教什么呢？老杨有三个儿子，大儿子继承家业卖豆腐，剩下两个儿子争着上“延津新学”。但两个儿子到底让谁去呢？卖豆腐的老杨又犯了愁。老杨一犯愁，又跑到马家庄找老马。</p><p>老马说“上学做官是为了啥？是为了回头卖豆腐。老杨家有一人在县政府，世上的豆腐千千万，但在县政府当过差的豆腐，也就老杨一家。再说回让谁去，人就像鸟一样，脑子好使，翅膀一硬就飞了；脑子笨，撒出去才能飞回来。脑子好使的，豆腐拴不住他；脑子笨的，才能飞回豆腐上。老马让老杨抓阄，让脑子笨的去。两张纸都写着“不上”，故意让脑子好使的主人公杨百顺先抓。</p><p>杨百顺接受了命运的安排，安心卖起豆腐，某次在马家庄出摊时，皮匠老吕将老杨和老马共同商议的抓阄的内情，一五一十告诉了杨百顺。老吕不是与卖豆腐的老杨过不去，而是与马家庄赶大车的老马有过节。说起来，杨家上学抓阄的内情，并不是老马传出来的，还是老杨上次到马家庄卖豆腐，给人说了。老杨说这话是为了显示自己跟老马是朋友，常在一起说心腹话。<span id="more"></span></p><p>之后百顺在该起床磨豆腐的时辰，他起床但不磨豆腐，借着上茅房，从后墙扒出去，一个人走了。他终于可以离开家了。或者说，他终于找到了脱离老杨和豆腐的另一个理由。</p><p>之间还有很多的故事，百顺借由舞社火进县政府，进而被丧偶的吴湘湘看中,入赘到了西街馒头铺,不过百顺跟吴香香说不着,到跟吴香香五岁的女儿巧玲说得着,所以当吴香香跟隔壁银匠老高私奔后,百顺本想出门假意寻找几天,就带着巧玲重新过日子,谁想到在路上他竟弄丢了唯一说得着的巧玲,从此假找变成了真找,漂泊半生。</p><p>以上只是书中部分故事，各色人物层出不穷，故事耐人琢磨，值得静下心来去思考他们的处境、做出的选择，进而反观自己已经度过的人生。中国人吵架喜欢翻旧账，原本吵的是这件事，但把陈年烂谷子的事翻出来，总是话里有话,耐人寻味,人都被话拿住了。把一件事绕成了另一件事，把一件事说成了另一件事，一件事能扯出十件事，一件事十条理，到头来，不是最原本的事，中间拐着好几道弯。世上的人遍地都是。说得着的,却千里难寻,能得一个说得着，就是一句顶一万句。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这是我为线下读书分享活动准备的稿子，传至个人博客上记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;刘震云的一个朋友，他的老婆出轨了，刘震云就对他的朋友说，一个女人出轨，那个男人一定是说了一句让她心动的话，这一句话顶过他朋友的一万句话，但是他们都不知道那句话是什么，为了找到那句话，就开始创作这本书。&lt;/p&gt;
&lt;p&gt;主人公叫杨百顺，他的父亲是卖豆腐的老杨，赶着巴结不拿他当朋友的马家庄赶大车的老马，拿他当朋友的，想跟他多说一句话，老杨倒对他爱搭不理。老杨解释这样做的原因呢：”论起事来，同样一件事，我只能看一里，他能看十里，我只能看一个月，他一下能看十年“；又说：“以后遇到事，就想找他商量。”&lt;/p&gt;
&lt;p&gt;其实听明白了，还是想占人便宜，遇事自个儿拿不定主意，想借人一双眼。自打认识老杨，老马给老杨出过不下一百个主意；老马从老杨那里，听到的却全是废话。那既然老马看不上老杨，为啥还跟他来往呢？因为方圆百里，哪儿还有一下看十里和看十年的人呢？老马也是一辈子没朋友。&lt;/p&gt;
&lt;p&gt;老杨都找老马请教什么呢？老杨有三个儿子，大儿子继承家业卖豆腐，剩下两个儿子争着上“延津新学”。但两个儿子到底让谁去呢？卖豆腐的老杨又犯了愁。老杨一犯愁，又跑到马家庄找老马。&lt;/p&gt;
&lt;p&gt;老马说“上学做官是为了啥？是为了回头卖豆腐。老杨家有一人在县政府，世上的豆腐千千万，但在县政府当过差的豆腐，也就老杨一家。再说回让谁去，人就像鸟一样，脑子好使，翅膀一硬就飞了；脑子笨，撒出去才能飞回来。脑子好使的，豆腐拴不住他；脑子笨的，才能飞回豆腐上。老马让老杨抓阄，让脑子笨的去。两张纸都写着“不上”，故意让脑子好使的主人公杨百顺先抓。&lt;/p&gt;
&lt;p&gt;杨百顺接受了命运的安排，安心卖起豆腐，某次在马家庄出摊时，皮匠老吕将老杨和老马共同商议的抓阄的内情，一五一十告诉了杨百顺。老吕不是与卖豆腐的老杨过不去，而是与马家庄赶大车的老马有过节。说起来，杨家上学抓阄的内情，并不是老马传出来的，还是老杨上次到马家庄卖豆腐，给人说了。老杨说这话是为了显示自己跟老马是朋友，常在一起说心腹话。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="人文" scheme="https://verasince1997.github.io/tags/%E4%BA%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>道德经从入门到精通01</title>
    <link href="https://verasince1997.github.io/2024/08/31/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A01/"/>
    <id>https://verasince1997.github.io/2024/08/31/%E9%81%93%E5%BE%B7%E7%BB%8F/%E9%81%93%E5%BE%B7%E7%BB%8F%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A01/</id>
    <published>2024-08-31T13:45:12.571Z</published>
    <updated>2024-09-03T14:33:24.263Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>初探道德经</p></blockquote><p>人出名后，就有不符合实际的传说，比如老子生下来是老头。传闻老子只是道德经的编辑者，源头是上古时代领导者（尧舜禹）整理的治理国家的方法。老子所处时期时处东周春秋时期，希望后世领导者学习。即人之所教，我亦教之。（公司的领导要学，基本的规律、法则。）</p><p>老子《道德经》中讲了两个道， 【天之道】、 【圣人之道】。老子并没有把道讲得很玄乎，因为市面上教授道德经的有意无意把这两个道混在一起。道德经不是嘉靖帝修炼长生不死，这偏离道德经本质。</p><p>【天之道】：即在人世间之上有一种力量，按照这个力量的存在构成了现在的世界，无法命名，勉强命名为“道”。比如“举头三尺有神明”，宗教就运用这种力量。比如稻盛和夫的“宇宙意志，敬天爱人。”人类好像是一个神秘力量建造的游戏，我们不懂游戏规则，懂规则玩得更开心。</p><p>【圣人之道】：即领导者法则，有道的国家领导者，去观摩效仿天之道。观察其特点，是制定理解圣人之道的方法。上如何如何，民如何如何。整个世界怎么来的，一个点大爆炸，现在还在爆炸的膨胀中，所有的星系正在远离我们。爆炸之前的宇宙是什么样的？天之道模糊，圣人之道可以由看得到人世间怎么运行，领导者要尽量放下自己的欲望，为你管理的百姓做事。公司的领导者放下自己的名利，专注员工的物质和精神。</p><span id="more"></span><p>道的三个内涵：</p><ul><li>第一个内涵：根本没有永远的事，我们只是其中的一个片段，期间变化不息。烦恼来源于想永远拥有。怎么解决：共同度过。手里的手机，十年前，在山里是金属，几十年后被压碎回收，只不过它现在叫手机，贪官家里的钱长毛了，敢花这些钱吗，怎么体现他永远拥有这些钱，回家点钱，体验拥有的感觉。放下，不要太执着了。较劲，执着，家长这个性格，考第一赚钱买房子，孩子在这种压力下就会生病。找到乐趣，你找到这件事的根本意义所在。沙在手里，轻轻地捧一把，比捏紧它拥有更多。学会放下，不执着于形名，人生会从容。这是道的第一个内涵。</li><li>第二个内涵，世界是一个联系的整体，十个人坐一个圆桌，我不和左边的人说话，如何让他对我笑，我对右边的人笑，依          次传递，就会收获左边人的笑，实际上收获到9个人的笑。<br>我们经历的事情不过就是这一桌子的事。你发出的信息，世界会回馈到你，逃不掉。如果各位我们能够按照这个法则去做事儿，那您人生无往不利，会越来越丰盛的好。</li><li>第三个内涵，我们该怎么做？不计回报。无我利他。尽量放下自己的欲望，不计回报发出善的信息。你天天骂人，别人不可能不回馈你，你80岁还被骂，你愿意这样度过这一生？</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;初探道德经&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人出名后，就有不符合实际的传说，比如老子生下来是老头。传闻老子只是道德经的编辑者，源头是上古时代领导者（尧舜禹）整理的治理国家的方法。老子所处时期时处东周春秋时期，希望后世领导者学习。即人之所教，我亦教之。（公司的领导要学，基本的规律、法则。）&lt;/p&gt;
&lt;p&gt;老子《道德经》中讲了两个道， 【天之道】、 【圣人之道】。老子并没有把道讲得很玄乎，因为市面上教授道德经的有意无意把这两个道混在一起。道德经不是嘉靖帝修炼长生不死，这偏离道德经本质。&lt;/p&gt;
&lt;p&gt;【天之道】：即在人世间之上有一种力量，按照这个力量的存在构成了现在的世界，无法命名，勉强命名为“道”。比如“举头三尺有神明”，宗教就运用这种力量。比如稻盛和夫的“宇宙意志，敬天爱人。”人类好像是一个神秘力量建造的游戏，我们不懂游戏规则，懂规则玩得更开心。&lt;/p&gt;
&lt;p&gt;【圣人之道】：即领导者法则，有道的国家领导者，去观摩效仿天之道。观察其特点，是制定理解圣人之道的方法。上如何如何，民如何如何。整个世界怎么来的，一个点大爆炸，现在还在爆炸的膨胀中，所有的星系正在远离我们。爆炸之前的宇宙是什么样的？天之道模糊，圣人之道可以由看得到人世间怎么运行，领导者要尽量放下自己的欲望，为你管理的百姓做事。公司的领导者放下自己的名利，专注员工的物质和精神。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="道德经" scheme="https://verasince1997.github.io/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>也许你该找人聊聊</title>
    <link href="https://verasince1997.github.io/2022/05/15/%E4%BA%BA%E6%96%87/%E4%B9%9F%E8%AE%B8%E4%BD%A0%E8%AF%A5%E6%89%BE%E4%BA%BA%E8%81%8A%E8%81%8A/"/>
    <id>https://verasince1997.github.io/2022/05/15/%E4%BA%BA%E6%96%87/%E4%B9%9F%E8%AE%B8%E4%BD%A0%E8%AF%A5%E6%89%BE%E4%BA%BA%E8%81%8A%E8%81%8A/</id>
    <published>2022-05-15T04:34:39.291Z</published>
    <updated>2024-08-26T04:39:48.252Z</updated>
    
    <content type="html"><![CDATA[<p>在开始阅读这本书之前很久，就知道它大名，真正决定好好读完这本大众心理读物，是某天刷微博看到《暗时间》的作者刘未鹏在博文中推荐这本书。我心想，通过阅读《暗时间》，我跟着作者的思维一起探索自己的观点、生活方式，并改变了自己的某些观念，这个作者想法挺多，也十分有趣，如果是他的强烈推荐，那我必须得好好读读这本书。<br>时间来到读完了这本书，我就得想想有什么思考，首先说故事情节，像是你打开了纪录片，看了5个不同的人，却都困在现实生活的泥潭中，他们从一开始的不愿表达出真实的一面，到慢慢地愿意揭开一层层造成现状的创伤，（在这些篇幅中，透过作者通俗化生活化的讲述，我们得以了解心理治疗师是如何“施以巧计”让来访者愿意把真相一字一句说出来，这个角度也挺有趣的，了解了治疗师的日常工作方式。）我们也从不知道他为什么是这样的脾气、生活状态、人际关系，到“哦，原来是这样，他过去经历的事，没有好好处理，没有机会治愈，就迫于现实的残酷，草草包扎下，把伤疤用贴纸盖上并不能从本质上轻而易举地一笔带过心灵上的创伤。”然后我们关注心理治疗师如何引导这些开始正视真实、脆弱、破碎的自我的个体完成进一步的思维上、观念上、行为上的转变。解决顽疾的确麻烦，先要不掩饰自己很痛苦，让治疗师知道自己很难做，然后要在两颗心灵的对话中发现自己固执己见、根深蒂固的行为模式是一种心理防御机制，最后想通一些事，完成观念上的转变；或者是自己看到了另一种可能，然后觉得还不赖，在尝试后感觉比之前好，之后就慢慢完成观念的转变。读完5个治疗故事，很舒服，像亲历了整个治疗过程，是一种思维的畅快，心灵上的慰藉，温暖柔软、细腻真切。在某司上班时，它提供了一个免费的心理咨询，大概50min吧，我报名参加了，在咨询前我打好了底稿，自己要讲什么经历，想要询问什么，想要探讨什么，这短短50min我好像出现了Flow心流状态，可太惬意了。结合这本书，我对心理咨询的定义大致是“在忙乱或者假装过得很忙乱实则浑浑噩噩度日的生活中，去关爱自己，让心灵放松，直视一直焦虑的问题，对一个有经验有技巧的咨询师将真实和盘托出。有句话是“有的事情说出来让别人知道，你就会发现没那么糟糕。”咨询师会和你一起探讨你做出不当行为的原因，以及接下来我们可以怎么解决问题”。对于本书内容我大概就这些感受，接下来是我将书中观点与自己现状结合引发的思考。<span id="more"></span><br>写自己的故事还是难以下笔的，因为最基本的是你要袒露自己的劣根性。很喜欢Vain这个单词，因为它的意思非常现实，（Vain：徒劳、自负、无用功）这不就是说一直以来aimlessly度日的我吗？我记性还算可以，平常也喜欢想东想西，很喜欢站在今天的时间把同一性质发生在不同时间的事串起来分析我身边的人、事物、行为，结果就是我大脑中存储了非常多我经历过的事情，一天搁这胡乱思考、伤春悲秋、自我审视。我特别喜欢模糊问题，不去思考安身立命的根源，用一些娱乐转移焦虑打发时间。（在此感谢阳明心学，某种程度上让我尝试开始不把时间用在不必要的攀比；或者因为不愿直视麻烦的现状而拖延时间、不做实事、掩盖局面。转而思考起怎么才能在几年甚至以后都过上心态安宁的生活。）所以要写自己的遭遇还挺需要勇气的，知道自己浪费了很多机会，现在要说出来，你说难受不难受？<br>我有过几次长期浪费自己时间的经历，逃避问题，说实在有点搞笑，就好比只有在一个比较长的假期结束前一天，心里会出现一种为什么不惜时的觉悟，但是当自己有很长时间准备一件事的时候，却总觉得给的时间太足够了（不晓得在哪看过一句话，“你总以为还有时间，这就是问题所在。”）我经历过几次觉得“这件事是很麻烦，是个长线任务，但现在动手好早哦，再拖几天”。在拖到终于开始的时候，我会有两条路，一条是虽然不细致计划，但会学几天了解自己学习摄入速度，要花时间在心里盘算，一周后、一个月后、三个月后、自己可以学到什么程度，而且是动态规划，因为百分之百不可能按最初的计划完成进度，你就得在大方针基本不变的情形下，对下一周的安排注入最新最适合你的策略，这样的奋斗岁月会很充实且从容自信。很喜欢谷爱凌在冬奥比完赛回答记者提出的“如何看待天赋和努力”的发言，“天赋可能会让你在一开始的时候上手比别人快，但决定胜负是要靠刻意训练堆积，我自己给自己设计训练内容及时长，我把我能想到的都做完了。”这样在准备的每一天以及最后上战场时，内心都很坦然。其实我发现苏翊鸣向外界传达的信息也是类似，他很幸运发现自己的热爱，并付出了他认知范围内最大的努力。这是他的一句话：“时间从来就是梦想的朋友，努力永远不会欺骗人。”；另一条路是我一直以来选择的（真是惭愧），我不敢计划，因为我觉得好像有点搞不定，自我欺骗式的说埋头学就是了，反正我每天就固定好足量时间学，肯定会学完的，至于何时学完，那是时间的事，我只管每天定时坐在那个位置继续学就是了。（典型的用战术上的勤奋掩盖战略上的懒惰。（战略是指选择做什么的“什么”和“为什么”，战术是指计划如何实现它。通俗来说，战略是做正确的事 ， 战术是正确地做事。））其实决定一件事成败不是最后检验的面试、考试时刻，我觉得从开始准备的时候，我的想法和行为就在慢慢影响我的信心，我选择第二条路，不就是不相信自己可以通过反复多次的刻意训练然让自己熟练掌握考核技能嘛。所以说我真的蠢，一开始时间是够用的，可以开展几轮地毯碾压式复习。而我宁愿每天生活在无聊痛苦中，也不愿意用一年的时间改变自己。我不想走第二条路了！！！那可真的是百无聊赖啊，我让自己天天玩，定点吃饭（当然有个习惯保持得很好，除了生理期，我每天都会运动差不多1.5个h，由此可见坚持运动实在是比让自己时刻做到“心外无物、知行合一、致良知”easy多了。）在我这样自我放弃式的生活了几天，我每天都会感叹，为啥时间过得这么慢，下午15点38分，我先看成16点38分，心想“哇耶！马上17点了，可以吃晚饭，然后等消化完就可以运动了，运动了就可以洗澡了，洗完澡玩一会儿就可以睡觉了，终于到第二天了！”，然而当发现自己看错了，是15点38分，心一下就蔫了，今天这一天怎么这么长的无力感慨再次占据我的心灵。所以，真的，艰难前行的日子难受，但自暴自弃、不直面问题、选择躺平更让人痛苦。我现在回想都觉得诧异，居然期望时间快点过去，这种反人类的思维也让我品尝到恶果，我那段时间就是生活的不开心，以前我还潜意识里，就是我自己都没意识到的，会看着别人的学习工作轨迹，与自己的比。现在入门了点《易经》、《道德经》、《传习录》，尤其是王阳明的心学，让我慢慢地改变观念，还实践上了道家的“无为而无不为”，儒家的“无所为而为”，佛家的“无心而为”。现在我所理解的安身立命，即我是一个每天必须摄取食物、必须拿9个小时睡觉、存活时间不会超过百年、可以通过日复一日的推进累积知识的个体。如果想要look behind觉得充实、有成就感、获得自己肯定；想要做到宠辱不惊、淡定从容。就需要发现自己擅长做、喜欢做、有价值利益做的工作，然后堆经验值，了解这个行业，这个知识体系为何出现、发展过程、未来趋势、以及我能用它为社会创造什么便捷or福利。无论是24岁，抑或是34岁、44岁、54岁，无论结婚了、有孩子了、离婚了、移民了，陪伴身旁的人换了一批又一批，你还是从一开始累积知识的综合体，可以想象到的是你离开世界前，如果你的另一半先去了几年，那剩下的几年时间要是想活得开心，我想咱们得培养一个热爱，让自己可专注投入、开心做的事业。</p><p>老子在《道德经》说：“非以其无私邪？故能成其私。”我的理解和央视主持人白岩松差不多，即“无私为大私”。大三的时候站在学校门口的江边看江水流过，我想即便初中没学过“逝者如斯夫，不舍昼夜”的人也会发出类似“无论我们今天选择做什么，江水、时间都会机械地自顾自地流逝，所以面对时间消逝，我们是无力的。”的感慨。即有的东西和几千年前是通的，日常人际交往中出现的那些小九九、如何打交道、人性的问题、怎么做才能达到最初的设想，先哲都有过思考，所以《易经》、《道德经》是一定要研读的，我由这本心理书引出的上面狗屁不通的思考也是为了让自己更看清自我本来的面目，不要再粉饰太平，知道自己很垃圾后，做出改变，然后实现自己的某些期许（我有一个爱好，记录自己的旅行轨迹，我找了很久，没有很好的程序应用，看来和我有一样需求的人不多，我得自己花大量时间研发一个“在结束某次旅行的几百天后，我突然心血来潮，想回顾几百天前的某一日，自己从A酒店到B景点，用了什么交通工具，那条路上我拍摄的照片能出现在地图上，从B景点到C餐馆我选择走了哪条路，当时的天气如何，我吃了什么？结束后我是选择回酒店睡午觉还是急忙奔赴下一个景点？”在某厂实习时，我是写Python搞数据科学的，问了会swift搞ios 应用程式的同学，他提议我先写出类似keep锻炼软件能记录运动轨迹的功能，但我在想如果我旅行要记录完整轨迹和行程信息，这数据上传到服务器，我应用得一直开着，还是很耗电的。哦豁，我就一直停滞没动，“致良知”，致：听从，然后知行合一，所以我得去学啊，做不出就挺尬的，自己喜欢的都做不出，算什么程序员？），不和peer比较不等于不期待最终的pk环节，在我目前的认知看来，两三年的财富和社会关系总和并不稳定，对于我们这群即将迎接25岁生日的青年，我们还没安定下来，现在正是多吃苦的时刻，先踏实充满热情过好每一天，有句话虽然看起来无力，但是在理：“不要高估每一日的努力，不要低估每一天的积累。”这个世界就是这样，你今天学的或者今天的饮食和运动，不能马上体现在测试中考察到你或者明早上称时体重降低，但你今天不这么做又不行，所以只有改变自己的观念，把这种激情学习和健康减肥融入自己的生活，每天都不间断的坚持，时间线一拉长，真有改变。我擅长浪费时间在无意义的焦虑上，我一方面觉得时间多，另一方面觉得要系统学好一个体系好难哦，那把你认为的大把不知道怎么花的时间用在一点一点突破这个知识体系上。想通根源性问题，专注累经验，宠辱不惊、淡定从容。能做到安身立命，然后实现最初的愿景，这就是我理解的“无私为大私”。</p><p>宠辱不惊、淡定从容这两点我真迫切想知道能做到是什么体验，受到敬仰的人的肯定时，其实也没什么大不了，但我就心花怒放、一颗心砰砰跳跳、恼火得很。首先她的肯定并不会让我额外获得什么，而且那也是我之前做的事让她肯定我，接下来我一蹶不振也是有可能的，而她也不会插手管我。再者我和她的阶层关系并没改变，她还是那么的遥不可及，我还得继续践行我“安身立命”的每日计划，做不到宠辱不惊应该是自己的价值观不完善，不清楚和不愿面对自己现在的实力，当一个比你高级的人向你“抛出橄榄枝”，你就以为自己很快能提升到她那样的能力，但实际还得靠刚才说的“努力一天没用，但要前进只有靠一天一天的积累”来逐步提升能力。我思考这些后，就没啥偶像了，以前有两个偶像，一个师姐一个师弟，基本上每天都会想起他俩，我们有着同样的追求，并凭借自己的奋斗出现在北京、深圳、上海同样的写字楼与风景中，走过同样的街道，完成同样性质的工作，我们的关系坚强又脆弱。现在就觉得要是不专注自己，其实很现实的，根本没有再见他俩或是交流心得、合作的契机。而且我最讨厌的就是ambiguous模棱两可，做题不喜欢同性质的问题讲些有的没的，我要暂停做题节奏，转而自己总结一套此类题型的打法，很多变型都是从根源问题修改一丢丢来的，有了自己总结的套路，我不需要记那么多有的没的，隔了很久再看它，我还是能从0到1推出它到底是个什么东西、它到底怎么求解。也不喜欢和人的关系模棱两可，不需要想太多，想好自己要做什么，做自己的事就是了，有点搞笑吧，财富和能力不在同一水平的人，我个人认为亲密关系不会长久。<br>要再阅读深入心灵的读物，因为做不到淡泊从容、宠辱不惊、心如止水式生活。阳明心学就可以解决上述问题，只是我道行太浅，需要苦难和时间磨练。此刻的我就像东周末年，面临最大痛苦的人类，和他们一样，开始探求真理。孔子、老子、诸子百家，百家争鸣在浩劫变动中孕育而生。如何安排最难安排的生活？为什么要安排，因为要安顿心，心外无物，心有无限的一面，生命的最大问题是生命内部的麻烦，即无限心的安顿。先出世再入世，以出世的精神做入世的事情。“人如何安排好自己最难安排的生活，人如何安顿自己的无限心。”此乃中国哲学根本。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在开始阅读这本书之前很久，就知道它大名，真正决定好好读完这本大众心理读物，是某天刷微博看到《暗时间》的作者刘未鹏在博文中推荐这本书。我心想，通过阅读《暗时间》，我跟着作者的思维一起探索自己的观点、生活方式，并改变了自己的某些观念，这个作者想法挺多，也十分有趣，如果是他的强烈推荐，那我必须得好好读读这本书。&lt;br&gt;
时间来到读完了这本书，我就得想想有什么思考，首先说故事情节，像是你打开了纪录片，看了5个不同的人，却都困在现实生活的泥潭中，他们从一开始的不愿表达出真实的一面，到慢慢地愿意揭开一层层造成现状的创伤，（在这些篇幅中，透过作者通俗化生活化的讲述，我们得以了解心理治疗师是如何“施以巧计”让来访者愿意把真相一字一句说出来，这个角度也挺有趣的，了解了治疗师的日常工作方式。）我们也从不知道他为什么是这样的脾气、生活状态、人际关系，到“哦，原来是这样，他过去经历的事，没有好好处理，没有机会治愈，就迫于现实的残酷，草草包扎下，把伤疤用贴纸盖上并不能从本质上轻而易举地一笔带过心灵上的创伤。”然后我们关注心理治疗师如何引导这些开始正视真实、脆弱、破碎的自我的个体完成进一步的思维上、观念上、行为上的转变。解决顽疾的确麻烦，先要不掩饰自己很痛苦，让治疗师知道自己很难做，然后要在两颗心灵的对话中发现自己固执己见、根深蒂固的行为模式是一种心理防御机制，最后想通一些事，完成观念上的转变；或者是自己看到了另一种可能，然后觉得还不赖，在尝试后感觉比之前好，之后就慢慢完成观念的转变。读完5个治疗故事，很舒服，像亲历了整个治疗过程，是一种思维的畅快，心灵上的慰藉，温暖柔软、细腻真切。在某司上班时，它提供了一个免费的心理咨询，大概50min吧，我报名参加了，在咨询前我打好了底稿，自己要讲什么经历，想要询问什么，想要探讨什么，这短短50min我好像出现了Flow心流状态，可太惬意了。结合这本书，我对心理咨询的定义大致是“在忙乱或者假装过得很忙乱实则浑浑噩噩度日的生活中，去关爱自己，让心灵放松，直视一直焦虑的问题，对一个有经验有技巧的咨询师将真实和盘托出。有句话是“有的事情说出来让别人知道，你就会发现没那么糟糕。”咨询师会和你一起探讨你做出不当行为的原因，以及接下来我们可以怎么解决问题”。对于本书内容我大概就这些感受，接下来是我将书中观点与自己现状结合引发的思考。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="https://verasince1997.github.io/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    
    <category term="人文" scheme="https://verasince1997.github.io/tags/%E4%BA%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>进制转换模板</title>
    <link href="https://verasince1997.github.io/2022/02/20/%E7%AE%97%E6%B3%95/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E6%A8%A1%E6%9D%BF/"/>
    <id>https://verasince1997.github.io/2022/02/20/%E7%AE%97%E6%B3%95/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E6%A8%A1%E6%9D%BF/</id>
    <published>2022-02-20T09:13:13.716Z</published>
    <updated>2022-02-20T09:40:13.454Z</updated>
    
    <content type="html"><![CDATA[<p>直接写上我整理出的x进制转为y进制代码。思路是先将x进制的数转为10进制。比如16进制的A1要转为10进制，对于s[0]=‘A’  <code>ans+=s[0]-'A'+10</code>，然后<code>ans*=x</code>，ans=160，再加上s[1]-‘0’，ans为161。在从10进制到y进制的过程中，当取余值&lt;10时，直接加上字符0；而当其&gt;=10时，又不能打表，所以要减10，再加上字符A(或者加上字符a，看题)。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; v;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">105</span>];<span class="comment">//24</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;x&gt;&gt;y;<span class="comment">//x=8 y=10</span></span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);<span class="comment">//len=2</span></span><br><span class="line">    <span class="comment">//先转为十进制</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        ans*=x;<span class="comment">//8进制转为10进制  8进制的24 4*8^0 + 2*8^1=20  </span></span><br><span class="line">      <span class="comment">//16进制的A1转为10进制 </span></span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i]&lt;=<span class="string">&#x27;9&#x27;</span>) ans+=(s[i]-<span class="string">&#x27;0&#x27;</span>); </span><br><span class="line">        <span class="keyword">else</span> ans+=(s[i]-<span class="string">&#x27;A&#x27;</span>)+<span class="number">10</span>;<span class="comment">// ans=10 ans= 10*16=160 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ans!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> w= ans%y;</span><br><span class="line">        <span class="keyword">if</span>(w&lt;<span class="number">10</span>) v.push_back(w+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span> v.push_back((w<span class="number">-10</span>)+<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">        ans/=y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=v.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;v[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;直接写上我整理出的x进制转为y进制代码。思路是先将x进制的数转为10进制。比如16进制的A1要转为10进制，对于s[0]=‘A’  &lt;code&gt;ans+=s[0]-&#39;A&#39;+10&lt;/code&gt;，然后&lt;code&gt;ans*=x&lt;/code&gt;，ans=160，再加上s[1]-‘0’</summary>
      
    
    
    
    <category term="OJ tricks" scheme="https://verasince1997.github.io/categories/OJ-tricks/"/>
    
    
    <category term="OJ tricks" scheme="https://verasince1997.github.io/tags/OJ-tricks/"/>
    
  </entry>
  
  <entry>
    <title>relationship &amp; backref</title>
    <link href="https://verasince1997.github.io/2022/02/19/python/flask/%E8%A7%86%E5%9B%BE%E5%86%85%E5%AE%B9%E4%B8%8E%E6%A8%A1%E6%9D%BF/"/>
    <id>https://verasince1997.github.io/2022/02/19/python/flask/%E8%A7%86%E5%9B%BE%E5%86%85%E5%AE%B9%E4%B8%8E%E6%A8%A1%E6%9D%BF/</id>
    <published>2022-02-19T13:06:32.654Z</published>
    <updated>2022-02-20T03:06:17.963Z</updated>
    
    <content type="html"><![CDATA[<p>写这篇文章时，我思考怎么才算理解掌握了从文档、视频学到的知识，写博客知识将习得的知识外现的一个最基础的步骤，关键看你总结出来的知识是否有体系完整，很有逻辑性，比如今天学到的backref和relationship，本来学的时候就一知半解，感觉懂了，我知道过了几天再看就不懂了，还不如一开始就彻底解决，我觉得这个东西本身就绕，我将通过一个例子，从没有使用这两个方法的查询代码与使用之后的查询代码相比较，从而从根本理解两者什么时候使用，怎么使用。</p><p>假设数据库中有两张表，一张Role表(Admin和User)，一张User表，那么一个角色可能有多个用户，但一个用户只能属于一个角色，所以Role和User是一对多的关系，下面是Role和User的模型类。<span id="more"></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Role</span>(<span class="params">db.Model</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&quot;roles&quot;</span>  <span class="comment"># 指定表名称</span></span><br><span class="line">    <span class="comment"># 参数1:表示整数类型,  参数2:表示主键</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 角色名唯一的</span></span><br><span class="line">    name = db.Column(db.String(<span class="number">64</span>), unique=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 需要设置关系属性relationship(不会产生字段),设置在一方</span></span><br><span class="line">    <span class="comment"># 给Role添加了users关系属性, 查询格式: role.users</span></span><br><span class="line">    <span class="comment"># 给User添加了role关系属性(反向引用),查询格式: user.role</span></span><br><span class="line">    <span class="comment"># 第一个参数是关联的模型类名称</span></span><br><span class="line">    users = db.relationship(<span class="string">&#x27;User&#x27;</span>, backref=<span class="string">&#x27;role&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为了方便的看到对象输出的内容__repr__, 如果是普通类__str__</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;Role:%s&gt;&quot;</span> % self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户(多方)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">db.Model</span>):</span></span><br><span class="line">    __tablename__ = <span class="string">&quot;users&quot;</span>  <span class="comment"># 指定表名称</span></span><br><span class="line">    <span class="comment"># 参数1:表示整数类型,  参数2:表示主键</span></span><br><span class="line">    id = db.Column(db .Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 用户名唯一的</span></span><br><span class="line">    name = db.Column(db.String(<span class="number">64</span>), unique=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 邮箱密码</span></span><br><span class="line">    email = db.Column(db.String(<span class="number">64</span>), unique=<span class="literal">True</span>)</span><br><span class="line">    password = db.Column(db.String(<span class="number">64</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 外键</span></span><br><span class="line">    role_id = db.Column(db.Integer, db.ForeignKey(Role.id))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为了方便的看到对象输出的内容__repr__, 如果是普通类__str__</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;User:%s,%s,%s,%s&gt;&quot;</span> % (self.id, self.name, self.email, self.password)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加外健在多方，添加relationship在一方。</p><p>现有需求如下：</p><p>1.知道Role，请查询出哪些用户数语此Role。</p><ul><li>原始查询方法：<ul><li>role = Role.query.get(1)</li><li>users = User.query.filter(<a href="http://role.id">role.id</a> == User.role_id)</li></ul></li><li>快速查询：<ul><li>role = Role.query.get(1)</li><li>users = role.users</li></ul></li></ul><p>2.知道某个用户，查询出该用户属于的role。</p><ul><li>原始查询方法：<ul><li>user = User.query.get(1)</li><li>role = Role.query.filter(user.role_id == <a href="http://role.id">role.id</a>)</li></ul></li><li>快速查询：<ul><li>user = User.query.get(1)</li><li>role = user.role</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;写这篇文章时，我思考怎么才算理解掌握了从文档、视频学到的知识，写博客知识将习得的知识外现的一个最基础的步骤，关键看你总结出来的知识是否有体系完整，很有逻辑性，比如今天学到的backref和relationship，本来学的时候就一知半解，感觉懂了，我知道过了几天再看就不懂了，还不如一开始就彻底解决，我觉得这个东西本身就绕，我将通过一个例子，从没有使用这两个方法的查询代码与使用之后的查询代码相比较，从而从根本理解两者什么时候使用，怎么使用。&lt;/p&gt;
&lt;p&gt;假设数据库中有两张表，一张Role表(Admin和User)，一张User表，那么一个角色可能有多个用户，但一个用户只能属于一个角色，所以Role和User是一对多的关系，下面是Role和User的模型类。&lt;/p&gt;</summary>
    
    
    
    <category term="Flask" scheme="https://verasince1997.github.io/categories/Flask/"/>
    
    
    <category term="Flask-SQLAlchemy" scheme="https://verasince1997.github.io/tags/Flask-SQLAlchemy/"/>
    
  </entry>
  
  <entry>
    <title>路由与视图</title>
    <link href="https://verasince1997.github.io/2022/02/19/python/flask/%E8%B7%AF%E7%94%B1%E4%B8%8E%E8%A7%86%E5%9B%BE/"/>
    <id>https://verasince1997.github.io/2022/02/19/python/flask/%E8%B7%AF%E7%94%B1%E4%B8%8E%E8%A7%86%E5%9B%BE/</id>
    <published>2022-02-19T08:16:18.979Z</published>
    <updated>2022-02-20T03:00:33.506Z</updated>
    
    <content type="html"><![CDATA[<p>1.能够创建Py2和Py3版本的虚拟环境</p><ul><li><p>查看虚拟环境版本：<br><code>virtualenv --version</code></p></li><li><p>创建虚拟环境：</p></li></ul><p><code>mkvirtualenv -p python3 虚拟环境名称(指定python3.x)</code><br><code>mkvirtualenv -p python3 py3_flask</code><br><code>mkvirtualenv py3_flask</code></p><ul><li><p>查看虚拟环境：<code>workon</code></p></li><li><p>使用虚拟环境：<code>workon 虚拟环境名称</code></p></li></ul><p>2.能够写出Flask从对象中加载配置的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span>(<span class="params">object</span>):</span></span><br><span class="line">    DEBUG = <span class="literal">True</span>;</span><br><span class="line">    </span><br><span class="line">app.config.from_object(Config)</span><br></pre></td></tr></table></figure><p>3.能够说出url_for的作用</p><p>通常和redirect一起使用，用以传递参数。url_for反解析：通过视图函数的名称返回地址，格式：<code>url_for('视图函数名称',key=value)</code><span id="more"></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(&#x27;/demo5&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo5</span>():</span></span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;https://ieee_fellow_jueluo.gitee.io/blog/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/demo1&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;demo1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/demo5&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo5</span>():</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;demo1&#x27;</span>))  </span><br><span class="line"><span class="comment"># 访问此路径 返回的是demo1</span></span><br></pre></td></tr></table></figure><p>4.能够写出带有参数的路由及视图函数</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(&#x27;/user/&lt;int:user_id&gt;&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_info</span>(<span class="params">user_id</span>):</span>  <span class="comment"># 视图函数user_info</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;the num is %d&#x27;</span> % user_id</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(&#x27;/demo5&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo5</span>():</span></span><br><span class="line">    <span class="comment"># 使用url_for生成指定视图函数所对应的url</span></span><br><span class="line">    <span class="comment"># 格式 url_for(&#x27;视图函数名&#x27;,key=value)</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;user_info&#x27;</span>, user_id=<span class="number">1997</span>))</span><br></pre></td></tr></table></figure><p>5.能够说出自定义转换器的步骤</p><p>在 web 开发中，可能会出现限制用户访问规则的场景，那么这个时候就需要过滤指定用户, 所以可以使用转换器实现<br>转换器的本质:通过正则表达式,匹配路由地址</p><p>系统自带转换器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_CONVERTERS = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>:          UnicodeConverter,</span><br><span class="line">    <span class="string">&#x27;string&#x27;</span>:           UnicodeConverter,</span><br><span class="line">    <span class="string">&#x27;any&#x27;</span>:              AnyConverter,</span><br><span class="line">    <span class="string">&#x27;path&#x27;</span>:             PathConverter,</span><br><span class="line">    <span class="string">&#x27;int&#x27;</span>:              IntegerConverter,</span><br><span class="line">    <span class="string">&#x27;float&#x27;</span>:            FloatConverter,</span><br><span class="line">    <span class="string">&#x27;uuid&#x27;</span>:             UUIDConverter,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义转换器,具体实现步骤为：</p><ul><li>导入转换器基类(BaseConverter)：Flask中所有的路由的匹配规则,都是使用转换器实现</li><li>自定义转换器：自定义类继承于转换器基类</li><li>添加转换器到默认的转换器字典中</li><li>使用自定义转换器实现自定义匹配规则</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义转换器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRegexConverter</span>(<span class="params">BaseConverter</span>):</span>  <span class="comment"># 继承BaseConverter类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, url_map, regex</span>):</span>  <span class="comment"># 编写初始方法 接收两个参数</span></span><br><span class="line">        super(MyRegexConverter, self).__init__(url_map)  <span class="comment"># 初始化父类空间</span></span><br><span class="line">        self.regex = regex  <span class="comment"># 初始化子类空间</span></span><br><span class="line"></span><br><span class="line">app.url_map.converters[<span class="string">&#x27;re&#x27;</span>] = MyRegexConverter  <span class="comment"># 将自定义转换器类添加到默认的转换列表中</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&lt;re(&quot;\d&#123;3&#125;&quot;):num&gt;&#x27;)  # 只接受三位小数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>(<span class="params">num</span>):</span></span><br><span class="line">    print(<span class="string">&quot;num = %s&quot;</span> % num)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;the num is %s&quot;</span> % num</span><br><span class="line">  </span><br><span class="line"><span class="meta">@app.route(&#x27;/&lt;re(&quot;1[345678]\d&#123;9&#125;&quot;):mobile&gt;&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mobile</span>(<span class="params">mobile</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;the mobile is %s&quot;</span> % mobile</span><br></pre></td></tr></table></figure><p>6.能够说出装饰器路由实现的几个关键的类</p><p>7.能够说出实现 HTTP 状态保持的原理</p><p>7.1 http是一种无状态协议，浏览器请求服务器是无状态的。</p><ul><li><strong>无状态</strong>：指一次用户请求时，浏览器、服务器不知道之前这个用户做过什么，每次请求都是一次新的请求。</li><li><strong>无状态原因</strong>：浏览器与服务器是使用 socket 套接字进行通信的，服务器将请求结果返回给浏览器之后，会关闭当前的 socket 连接，而且服务器也会在处理页面完毕之后销毁页面对象。<br>有时需要保持下来用户浏览的状态，比如用户是否登录过，浏览过哪些商品等</li></ul><p>7.2 实现状态保持主要有两种方式：</p><ul><li>在客户端存储信息使用<code>Cookie</code></li><li>在服务器端存储信息使用<code>Session</code></li></ul><p>8.能够说出Flask各个上下文对象</p><p>9.能够说出Flask-Script扩展的作用</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;1.能够创建Py2和Py3版本的虚拟环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看虚拟环境版本：&lt;br&gt;
&lt;code&gt;virtualenv --version&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建虚拟环境：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;mkvirtualenv -p python3 虚拟环境名称(指定python3.x)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;mkvirtualenv -p python3 py3_flask&lt;/code&gt;&lt;br&gt;
&lt;code&gt;mkvirtualenv py3_flask&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看虚拟环境：&lt;code&gt;workon&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用虚拟环境：&lt;code&gt;workon 虚拟环境名称&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.能够写出Flask从对象中加载配置的代码&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Config&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;object&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DEBUG = &lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.config.from_object(Config)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.能够说出url_for的作用&lt;/p&gt;
&lt;p&gt;通常和redirect一起使用，用以传递参数。url_for反解析：通过视图函数的名称返回地址，格式：&lt;code&gt;url_for(&#39;视图函数名称&#39;,key=value)&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Flask" scheme="https://verasince1997.github.io/categories/Flask/"/>
    
    
    <category term="Flask" scheme="https://verasince1997.github.io/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>PAT_Basic_1095 解码PAT准考证</title>
    <link href="https://verasince1997.github.io/2022/02/15/pat_basic/pat_basic_1095/"/>
    <id>https://verasince1997.github.io/2022/02/15/pat_basic/pat_basic_1095/</id>
    <published>2022-02-15T02:52:48.537Z</published>
    <updated>2022-02-15T06:37:52.712Z</updated>
    
    <content type="html"><![CDATA[<p>PAT 准考证号由 4 部分组成：</p><ul><li>第 1 位是级别，即 <code>T</code> 代表顶级；<code>A</code> 代表甲级；<code>B</code> 代表乙级；</li><li>第 2~4 位是考场编号，范围从 101 到 999；</li><li>第 5~10 位是考试日期，格式为年、月、日顺次各占 2 位；</li><li>最后 11~13 位是考生编号，范围从 000 到 999。</li></ul><p>现给定一系列考生的准考证号和他们的成绩，请你按照要求输出各种统计信息。</p><h4 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式：</h4><p>输入首先在一行中给出两个正整数 <em>N</em>（≤104）和 <em>M</em>（≤100），分别为考生人数和统计要求的个数。</p><p>接下来 <em>N</em> 行，每行给出一个考生的准考证号和其分数（在区间 [0,100] 内的整数），其间以空格分隔。</p><p>考生信息之后，再给出 <em>M</em> 行，每行给出一个统计要求，格式为：<code>类型 指令</code>，其中</p><ul><li><code>类型</code> 为 1 表示要求按分数非升序输出某个指定级别的考生的成绩，对应的 <code>指令</code> 则给出代表指定级别的字母；</li><li><code>类型</code> 为 2 表示要求将某指定考场的考生人数和总分统计输出，对应的 <code>指令</code> 则给出指定考场的编号；</li><li><code>类型</code> 为 3 表示要求将某指定日期的考生人数分考场统计输出，对应的 <code>指令</code> 则给出指定日期，格式与准考证上日期相同。</li></ul><h4 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式：</h4><p>对每项统计要求，首先在一行中输出 <code>Case #: 要求</code>，其中 <code>#</code> 是该项要求的编号，从 1 开始；<code>要求</code> 即复制输入给出的要求。随后输出相应的统计结果：</p><ul><li><code>类型</code> 为 1 的指令，输出格式与输入的考生信息格式相同，即 <code>准考证号 成绩</code>。对于分数并列的考生，按其准考证号的字典序递增输出（题目保证无重复准考证号）；</li><li><code>类型</code> 为 2 的指令，按 <code>人数 总分</code> 的格式输出；</li><li><code>类型</code> 为 3 的指令，输出按人数非递增顺序，格式为 <code>考场编号 总人数</code>。若人数并列则按考场编号递增顺序输出。</li></ul><p>如果查询结果为空，则输出 <code>NA</code>。</p><h4 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span> <span class="number">4</span></span><br><span class="line">B123180908127 <span class="number">99</span></span><br><span class="line">B102180908003 <span class="number">86</span></span><br><span class="line">A112180318002 <span class="number">98</span></span><br><span class="line">T107150310127 <span class="number">62</span></span><br><span class="line">A107180908108 <span class="number">100</span></span><br><span class="line">T123180908010 <span class="number">78</span></span><br><span class="line">B112160918035 <span class="number">88</span></span><br><span class="line">A107180908021 <span class="number">98</span></span><br><span class="line"><span class="number">1</span> A</span><br><span class="line"><span class="number">2</span> <span class="number">107</span></span><br><span class="line"><span class="number">3</span> <span class="number">180908</span></span><br><span class="line"><span class="number">2</span> <span class="number">999</span></span><br></pre></td></tr></table></figure><h3 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Case <span class="number">1</span>: <span class="number">1</span> A</span><br><span class="line">A107180908108 <span class="number">100</span></span><br><span class="line">A107180908021 <span class="number">98</span></span><br><span class="line">A112180318002 <span class="number">98</span></span><br><span class="line">Case <span class="number">2</span>: <span class="number">2</span> <span class="number">107</span></span><br><span class="line"><span class="number">3</span> <span class="number">260</span></span><br><span class="line">Case <span class="number">3</span>: <span class="number">3</span> <span class="number">180908</span></span><br><span class="line"><span class="number">107</span> <span class="number">2</span></span><br><span class="line"><span class="number">123</span> <span class="number">2</span></span><br><span class="line"><span class="number">102</span> <span class="number">1</span></span><br><span class="line">Case <span class="number">4</span>: <span class="number">2</span> <span class="number">999</span></span><br><span class="line">NA</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="built_in">string</span> iid,room,date,number,score;</span><br><span class="line">    <span class="keyword">char</span> level;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">new_node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nodes</span>&#123;</span></span><br><span class="line">    <span class="built_in">string</span> iid;</span><br><span class="line">    <span class="keyword">int</span> cnt;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(Node a,Node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.score != b.score)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.score&lt;b.score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a.iid&lt;b.iid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(nodes a, nodes b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.cnt != b.cnt)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.cnt &gt; b.cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> a.iid &lt; b.iid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,num,count=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    Node v[n+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">string</span> id;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;id&gt;&gt;v[i].score;<span class="comment">//对id切分 </span></span><br><span class="line">        v[i].iid=id;</span><br><span class="line">        v[i].level=id[<span class="number">0</span>];</span><br><span class="line">        v[i].room=id.substr(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">        v[i].date=id.substr(<span class="number">4</span>,<span class="number">6</span>);</span><br><span class="line">        v[i].number=id.substr(<span class="number">10</span>,<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">char</span> c;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;count&lt;&lt;<span class="string">&quot;: 1 &quot;</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="comment">//遍历数组 把规定level的加入 再排序</span></span><br><span class="line">            <span class="built_in">vector</span>&lt;Node&gt; v1;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(v[i].level==c)&#123;</span><br><span class="line">                    v1.push_back(v[i]);</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">                <span class="comment">//没有元素</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NA&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sort(v1.begin(),v1.end(),cmp1);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v1.size();i++)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;v1[i].level&lt;&lt;v1[i].room&lt;&lt;v1[i].date&lt;&lt;v1[i].number&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;v1[i].score&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">//统计指定考场的考生人数及总分</span></span><br><span class="line">            <span class="built_in">string</span> str;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;count&lt;&lt;<span class="string">&quot;: 2 &quot;</span>&lt;&lt;str&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>,room_score=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(v[i].room ==str)&#123;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    room_score+=stoi(v[i].score);</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">                <span class="comment">//没有元素</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NA&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;room_score&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//指定日期 分考场 先遍历一次 找到指定日期</span></span><br><span class="line">            <span class="built_in">string</span> dates;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;dates;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;count&lt;&lt;<span class="string">&quot;: 3 &quot;</span>&lt;&lt;dates&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>,new_node&gt;mp;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(v[i].date == dates)&#123;<span class="comment">//找到指定日期 但可能有多个考场</span></span><br><span class="line">                mp[v[i].room].cnt++;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">                <span class="comment">//没有元素</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NA&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">vector</span> &lt;nodes&gt; v3;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> it=mp.begin();it!=mp.end();it++)&#123;</span><br><span class="line">                v3.push_back(nodes&#123;it-&gt;first,it-&gt;second.cnt&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            sort(v3.begin(),v3.end(),cmp3);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v3.size();i++)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;v3[i].iid&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;v3[i].cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PAT 准考证号由 4 部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 位是级别，即 &lt;code&gt;T&lt;/code&gt; 代表顶级；&lt;code&gt;A&lt;/code&gt; 代表甲级；&lt;code&gt;B&lt;/code&gt; 代表乙级；&lt;/li&gt;
&lt;li&gt;第 2~4 位是考场编号，范围从 101 到 99</summary>
      
    
    
    
    <category term="PAT (Basic Level) Practice" scheme="https://verasince1997.github.io/categories/PAT-Basic-Level-Practice/"/>
    
    
    <category term="PAT (Basic Level) Practice" scheme="https://verasince1997.github.io/tags/PAT-Basic-Level-Practice/"/>
    
  </entry>
  
</feed>
